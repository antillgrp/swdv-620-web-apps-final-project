{"ast":null,"code":"import { useEffect } from 'react';\nimport { useRefresh } from '../sideEffect';\n/**\n * Trigger a refresh of the page when the page comes back from background after a certain delay\n *\n * @param {number} delay Delay in milliseconds since the time the page was hidden. Defaults to 5 minutes.\n */\n\nvar useRefreshWhenVisible = function useRefreshWhenVisible(delay) {\n  if (delay === void 0) {\n    delay = 1000 * 60 * 5;\n  }\n\n  var refresh = useRefresh();\n  useEffect(function () {\n    var lastHiddenTime;\n\n    var handleVisibilityChange = function handleVisibilityChange() {\n      if (document.hidden) {\n        // tab goes hidden\n        lastHiddenTime = Date.now();\n      } else {\n        // tab goes visible\n        if (Date.now() - lastHiddenTime > delay) {\n          refresh();\n        }\n\n        lastHiddenTime = null;\n      }\n    };\n\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    return function () {\n      return document.removeEventListener('visibilitychange', handleVisibilityChange);\n    };\n  }, [delay, refresh]);\n};\n\nexport default useRefreshWhenVisible;","map":{"version":3,"sources":["/home/vsonline/workspace/swdv-620-web-apps-final-project/ReactJsClient/node_modules/ra-core/esm/dataProvider/useRefreshWhenVisible.js"],"names":["useEffect","useRefresh","useRefreshWhenVisible","delay","refresh","lastHiddenTime","handleVisibilityChange","document","hidden","Date","now","addEventListener","removeEventListener"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA;;;;;;AAKA,IAAIC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAUC,KAAV,EAAiB;AACzC,MAAIA,KAAK,KAAK,KAAK,CAAnB,EAAsB;AAAEA,IAAAA,KAAK,GAAG,OAAO,EAAP,GAAY,CAApB;AAAwB;;AAChD,MAAIC,OAAO,GAAGH,UAAU,EAAxB;AACAD,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAIK,cAAJ;;AACA,QAAIC,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAY;AACrC,UAAIC,QAAQ,CAACC,MAAb,EAAqB;AACjB;AACAH,QAAAA,cAAc,GAAGI,IAAI,CAACC,GAAL,EAAjB;AACH,OAHD,MAIK;AACD;AACA,YAAID,IAAI,CAACC,GAAL,KAAaL,cAAb,GAA8BF,KAAlC,EAAyC;AACrCC,UAAAA,OAAO;AACV;;AACDC,QAAAA,cAAc,GAAG,IAAjB;AACH;AACJ,KAZD;;AAaAE,IAAAA,QAAQ,CAACI,gBAAT,CAA0B,kBAA1B,EAA8CL,sBAA9C;AACA,WAAO,YAAY;AACf,aAAOC,QAAQ,CAACK,mBAAT,CAA6B,kBAA7B,EAAiDN,sBAAjD,CAAP;AACH,KAFD;AAGH,GAnBQ,EAmBN,CAACH,KAAD,EAAQC,OAAR,CAnBM,CAAT;AAoBH,CAvBD;;AAwBA,eAAeF,qBAAf","sourcesContent":["import { useEffect } from 'react';\nimport { useRefresh } from '../sideEffect';\n/**\n * Trigger a refresh of the page when the page comes back from background after a certain delay\n *\n * @param {number} delay Delay in milliseconds since the time the page was hidden. Defaults to 5 minutes.\n */\nvar useRefreshWhenVisible = function (delay) {\n    if (delay === void 0) { delay = 1000 * 60 * 5; }\n    var refresh = useRefresh();\n    useEffect(function () {\n        var lastHiddenTime;\n        var handleVisibilityChange = function () {\n            if (document.hidden) {\n                // tab goes hidden\n                lastHiddenTime = Date.now();\n            }\n            else {\n                // tab goes visible\n                if (Date.now() - lastHiddenTime > delay) {\n                    refresh();\n                }\n                lastHiddenTime = null;\n            }\n        };\n        document.addEventListener('visibilitychange', handleVisibilityChange);\n        return function () {\n            return document.removeEventListener('visibilitychange', handleVisibilityChange);\n        };\n    }, [delay, refresh]);\n};\nexport default useRefreshWhenVisible;\n"]},"metadata":{},"sourceType":"module"}