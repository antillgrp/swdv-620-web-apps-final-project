{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { useContext, useMemo } from 'react';\nimport { useDispatch, useSelector, useStore } from 'react-redux';\nimport DataProviderContext from './DataProviderContext';\nimport validateResponseFormat from './validateResponseFormat';\nimport undoableEventEmitter from './undoableEventEmitter';\nimport getFetchType from './getFetchType';\nimport defaultDataProvider from './defaultDataProvider';\nimport { canReplyWithCache, getResultFromCache } from './replyWithCache';\nimport { startOptimisticMode, stopOptimisticMode } from '../actions/undoActions';\nimport { FETCH_END, FETCH_ERROR, FETCH_START } from '../actions/fetchActions';\nimport { showNotification } from '../actions/notificationActions';\nimport { refreshView } from '../actions/uiActions';\nimport useLogoutIfAccessDenied from '../auth/useLogoutIfAccessDenied'; // List of dataProvider calls emitted while in optimistic mode.\n// These calls get replayed once the dataProvider exits optimistic mode\n\nvar optimisticCalls = [];\n/**\n * Hook for getting a dataProvider\n *\n * Gets a dataProvider object, which behaves just like the real dataProvider\n * (same methods returning a Promise). But it's actually a Proxy object, which\n * dispatches Redux actions along the process. The benefit is that react-admin\n * tracks the loading state when using this hook, and stores results in the\n * Redux store for future use.\n *\n * In addition to the 2 usual parameters of the dataProvider methods (resource,\n * payload), the Proxy supports a third parameter for every call. It's an\n * object literal which may contain side effects, or make the action optimistic\n * (with undoable: true).\n *\n * @return dataProvider\n *\n * @example Basic usage\n *\n * import * as React from 'react';\nimport { useState } from 'react';\n * import { useDataProvider } from 'react-admin';\n *\n * const PostList = () => {\n *      const [posts, setPosts] = useState([])\n *      const dataProvider = useDataProvider();\n *      useEffect(() => {\n *          dataProvider.getList('posts', { filter: { status: 'pending' }})\n *            .then(({ data }) => setPosts(data));\n *      }, [])\n *\n *      return (\n *          <Fragment>\n *              {posts.map((post, key) => <PostDetail post={post} key={key} />)}\n *          </Fragment>\n *     }\n * }\n *\n * @example Handling all states (loading, error, success)\n *\n * import { useState, useEffect } from 'react';\n * import { useDataProvider } from 'react-admin';\n *\n * const UserProfile = ({ userId }) => {\n *     const dataProvider = useDataProvider();\n *     const [user, setUser] = useState();\n *     const [loading, setLoading] = useState(true);\n *     const [error, setError] = useState();\n *     useEffect(() => {\n *         dataProvider.getOne('users', { id: userId })\n *             .then(({ data }) => {\n *                 setUser(data);\n *                 setLoading(false);\n *             })\n *             .catch(error => {\n *                 setError(error);\n *                 setLoading(false);\n *             })\n *     }, []);\n *\n *     if (loading) return <Loading />;\n *     if (error) return <Error />\n *     if (!user) return null;\n *\n *     return (\n *         <ul>\n *             <li>Name: {user.name}</li>\n *             <li>Email: {user.email}</li>\n *         </ul>\n *     )\n * }\n *\n * @example Action customization\n *\n * dataProvider.getOne('users', { id: 123 });\n * // will dispatch the following actions:\n * // - CUSTOM_FETCH\n * // - CUSTOM_FETCH_LOADING\n * // - FETCH_START\n * // - CUSTOM_FETCH_SUCCESS\n * // - FETCH_END\n *\n * dataProvider.getOne('users', { id: 123 }, { action: CRUD_GET_ONE });\n * // will dispatch the following actions:\n * // - CRUD_GET_ONE\n * // - CRUD_GET_ONE_LOADING\n * // - FETCH_START\n * // - CRUD_GET_ONE_SUCCESS\n * // - FETCH_END\n */\n\nvar useDataProvider = function useDataProvider() {\n  var dispatch = useDispatch();\n  var dataProvider = useContext(DataProviderContext) || defaultDataProvider;\n  var isOptimistic = useSelector(function (state) {\n    return state.admin.ui.optimistic;\n  });\n  var store = useStore();\n  var logoutIfAccessDenied = useLogoutIfAccessDenied();\n  var dataProviderProxy = useMemo(function () {\n    return new Proxy(dataProvider, {\n      get: function get(target, name) {\n        if (typeof name === 'symbol') {\n          return;\n        }\n\n        return function (resource, payload, options) {\n          var type = name.toString();\n\n          var _a = options || {},\n              _b = _a.action,\n              action = _b === void 0 ? 'CUSTOM_FETCH' : _b,\n              _c = _a.undoable,\n              undoable = _c === void 0 ? false : _c,\n              _d = _a.onSuccess,\n              onSuccess = _d === void 0 ? undefined : _d,\n              _e = _a.onFailure,\n              onFailure = _e === void 0 ? undefined : _e,\n              rest = __rest(_a, [\"action\", \"undoable\", \"onSuccess\", \"onFailure\"]);\n\n          if (typeof dataProvider[type] !== 'function') {\n            throw new Error(\"Unknown dataProvider function: \" + type);\n          }\n\n          if (onSuccess && typeof onSuccess !== 'function') {\n            throw new Error('The onSuccess option must be a function');\n          }\n\n          if (onFailure && typeof onFailure !== 'function') {\n            throw new Error('The onFailure option must be a function');\n          }\n\n          if (undoable && !onSuccess) {\n            throw new Error('You must pass an onSuccess callback calling notify() to use the undoable mode');\n          }\n\n          var params = {\n            action: action,\n            dataProvider: dataProvider,\n            dispatch: dispatch,\n            logoutIfAccessDenied: logoutIfAccessDenied,\n            onFailure: onFailure,\n            onSuccess: onSuccess,\n            payload: payload,\n            resource: resource,\n            rest: rest,\n            store: store,\n            type: type,\n            undoable: undoable\n          };\n\n          if (isOptimistic) {\n            // in optimistic mode, all fetch calls are stacked, to be\n            // executed once the dataProvider leaves optimistic mode.\n            // In the meantime, the admin uses data from the store.\n            optimisticCalls.push(params);\n            return Promise.resolve();\n          }\n\n          return doQuery(params);\n        };\n      }\n    });\n  }, [dataProvider, dispatch, isOptimistic, logoutIfAccessDenied, store]);\n  return dataProviderProxy;\n};\n\nvar doQuery = function doQuery(_a) {\n  var type = _a.type,\n      payload = _a.payload,\n      resource = _a.resource,\n      action = _a.action,\n      rest = _a.rest,\n      onSuccess = _a.onSuccess,\n      onFailure = _a.onFailure,\n      dataProvider = _a.dataProvider,\n      dispatch = _a.dispatch,\n      store = _a.store,\n      undoable = _a.undoable,\n      logoutIfAccessDenied = _a.logoutIfAccessDenied;\n  var resourceState = store.getState().admin.resources[resource];\n\n  if (canReplyWithCache(type, payload, resourceState)) {\n    return answerWithCache({\n      type: type,\n      payload: payload,\n      resource: resource,\n      action: action,\n      rest: rest,\n      onSuccess: onSuccess,\n      resourceState: resourceState,\n      dispatch: dispatch\n    });\n  }\n\n  return undoable ? performUndoableQuery({\n    type: type,\n    payload: payload,\n    resource: resource,\n    action: action,\n    rest: rest,\n    onSuccess: onSuccess,\n    onFailure: onFailure,\n    dataProvider: dataProvider,\n    dispatch: dispatch,\n    logoutIfAccessDenied: logoutIfAccessDenied\n  }) : performQuery({\n    type: type,\n    payload: payload,\n    resource: resource,\n    action: action,\n    rest: rest,\n    onSuccess: onSuccess,\n    onFailure: onFailure,\n    dataProvider: dataProvider,\n    dispatch: dispatch,\n    logoutIfAccessDenied: logoutIfAccessDenied\n  });\n};\n/**\n * In undoable mode, the hook dispatches an optimistic action and executes\n * the success side effects right away. Then it waits for a few seconds to\n * actually call the dataProvider - unless the user dispatches an Undo action.\n *\n * We call that \"optimistic\" because the hook returns a resolved Promise\n * immediately (although it has an empty value). That only works if the\n * caller reads the result from the Redux store, not from the Promise.\n */\n\n\nvar performUndoableQuery = function performUndoableQuery(_a) {\n  var type = _a.type,\n      payload = _a.payload,\n      resource = _a.resource,\n      action = _a.action,\n      rest = _a.rest,\n      onSuccess = _a.onSuccess,\n      onFailure = _a.onFailure,\n      dataProvider = _a.dataProvider,\n      dispatch = _a.dispatch,\n      logoutIfAccessDenied = _a.logoutIfAccessDenied;\n  dispatch(startOptimisticMode());\n\n  if (window) {\n    window.addEventListener('beforeunload', warnBeforeClosingWindow);\n  }\n\n  dispatch({\n    type: action,\n    payload: payload,\n    meta: __assign({\n      resource: resource\n    }, rest)\n  });\n  dispatch({\n    type: action + \"_OPTIMISTIC\",\n    payload: payload,\n    meta: {\n      resource: resource,\n      fetch: getFetchType(type),\n      optimistic: true\n    }\n  });\n  onSuccess && onSuccess({});\n  undoableEventEmitter.once('end', function (_a) {\n    var isUndo = _a.isUndo;\n    dispatch(stopOptimisticMode());\n\n    if (isUndo) {\n      dispatch(showNotification('ra.notification.canceled'));\n      dispatch(refreshView());\n\n      if (window) {\n        window.removeEventListener('beforeunload', warnBeforeClosingWindow);\n      }\n\n      return;\n    }\n\n    dispatch({\n      type: action + \"_LOADING\",\n      payload: payload,\n      meta: __assign({\n        resource: resource\n      }, rest)\n    });\n    dispatch({\n      type: FETCH_START\n    });\n\n    try {\n      dataProvider[type](resource, payload).then(function (response) {\n        if (process.env.NODE_ENV !== 'production') {\n          validateResponseFormat(response, type);\n        }\n\n        dispatch({\n          type: action + \"_SUCCESS\",\n          payload: response,\n          requestPayload: payload,\n          meta: __assign(__assign({}, rest), {\n            resource: resource,\n            fetchResponse: getFetchType(type),\n            fetchStatus: FETCH_END\n          })\n        });\n        dispatch({\n          type: FETCH_END\n        });\n\n        if (window) {\n          window.removeEventListener('beforeunload', warnBeforeClosingWindow);\n        }\n\n        replayOptimisticCalls();\n      }).catch(function (error) {\n        if (window) {\n          window.removeEventListener('beforeunload', warnBeforeClosingWindow);\n        }\n\n        if (process.env.NODE_ENV !== 'production') {\n          console.error(error);\n        }\n\n        return logoutIfAccessDenied(error).then(function (loggedOut) {\n          if (loggedOut) return;\n          dispatch({\n            type: action + \"_FAILURE\",\n            error: error.message ? error.message : error,\n            payload: error.body ? error.body : null,\n            requestPayload: payload,\n            meta: __assign(__assign({}, rest), {\n              resource: resource,\n              fetchResponse: getFetchType(type),\n              fetchStatus: FETCH_ERROR\n            })\n          });\n          dispatch({\n            type: FETCH_ERROR,\n            error: error\n          });\n          onFailure && onFailure(error);\n          throw error;\n        });\n      });\n    } catch (e) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(e);\n      }\n\n      throw new Error('The dataProvider threw an error. It should return a rejected Promise instead.');\n    }\n  });\n  return Promise.resolve({});\n}; // event listener added as window.onbeforeunload when starting optimistic mode, and removed when it ends\n\n\nvar warnBeforeClosingWindow = function warnBeforeClosingWindow(event) {\n  event.preventDefault(); // standard\n\n  event.returnValue = ''; // Chrome\n\n  return 'Your latest modifications are not yet sent to the server. Are you sure?'; // Old IE\n}; // Replay calls recorded while in optimistic mode\n\n\nvar replayOptimisticCalls = function replayOptimisticCalls() {\n  Promise.all(optimisticCalls.map(function (params) {\n    return Promise.resolve(doQuery.call(null, params));\n  }));\n  optimisticCalls.splice(0, optimisticCalls.length);\n};\n/**\n * In normal mode, the hook calls the dataProvider. When a successful response\n * arrives, the hook dispatches a SUCCESS action, executes success side effects\n * and returns the response. If the response is an error, the hook dispatches\n * a FAILURE action, executes failure side effects, and throws an error.\n */\n\n\nvar performQuery = function performQuery(_a) {\n  var type = _a.type,\n      payload = _a.payload,\n      resource = _a.resource,\n      action = _a.action,\n      rest = _a.rest,\n      onSuccess = _a.onSuccess,\n      onFailure = _a.onFailure,\n      dataProvider = _a.dataProvider,\n      dispatch = _a.dispatch,\n      logoutIfAccessDenied = _a.logoutIfAccessDenied;\n  dispatch({\n    type: action,\n    payload: payload,\n    meta: __assign({\n      resource: resource\n    }, rest)\n  });\n  dispatch({\n    type: action + \"_LOADING\",\n    payload: payload,\n    meta: __assign({\n      resource: resource\n    }, rest)\n  });\n  dispatch({\n    type: FETCH_START\n  });\n\n  try {\n    return dataProvider[type](resource, payload).then(function (response) {\n      if (process.env.NODE_ENV !== 'production') {\n        validateResponseFormat(response, type);\n      }\n\n      dispatch({\n        type: action + \"_SUCCESS\",\n        payload: response,\n        requestPayload: payload,\n        meta: __assign(__assign({}, rest), {\n          resource: resource,\n          fetchResponse: getFetchType(type),\n          fetchStatus: FETCH_END\n        })\n      });\n      dispatch({\n        type: FETCH_END\n      });\n      onSuccess && onSuccess(response);\n      return response;\n    }).catch(function (error) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(error);\n      }\n\n      return logoutIfAccessDenied(error).then(function (loggedOut) {\n        if (loggedOut) return;\n        dispatch({\n          type: action + \"_FAILURE\",\n          error: error.message ? error.message : error,\n          payload: error.body ? error.body : null,\n          requestPayload: payload,\n          meta: __assign(__assign({}, rest), {\n            resource: resource,\n            fetchResponse: getFetchType(type),\n            fetchStatus: FETCH_ERROR\n          })\n        });\n        dispatch({\n          type: FETCH_ERROR,\n          error: error\n        });\n        onFailure && onFailure(error);\n        throw error;\n      });\n    });\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error(e);\n    }\n\n    throw new Error('The dataProvider threw an error. It should return a rejected Promise instead.');\n  }\n};\n\nvar answerWithCache = function answerWithCache(_a) {\n  var type = _a.type,\n      payload = _a.payload,\n      resource = _a.resource,\n      action = _a.action,\n      rest = _a.rest,\n      onSuccess = _a.onSuccess,\n      resourceState = _a.resourceState,\n      dispatch = _a.dispatch;\n  dispatch({\n    type: action,\n    payload: payload,\n    meta: __assign({\n      resource: resource\n    }, rest)\n  });\n  var response = getResultFromCache(type, payload, resourceState);\n  dispatch({\n    type: action + \"_SUCCESS\",\n    payload: response,\n    requestPayload: payload,\n    meta: __assign(__assign({}, rest), {\n      resource: resource,\n      fetchResponse: getFetchType(type),\n      fetchStatus: FETCH_END,\n      fromCache: true\n    })\n  });\n  onSuccess && onSuccess(response);\n  return Promise.resolve(response);\n};\n\nexport default useDataProvider;","map":{"version":3,"sources":["/home/vsonline/workspace/swdv-620-web-apps-final-project/ReactJsClient/node_modules/ra-core/esm/dataProvider/useDataProvider.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","useContext","useMemo","useDispatch","useSelector","useStore","DataProviderContext","validateResponseFormat","undoableEventEmitter","getFetchType","defaultDataProvider","canReplyWithCache","getResultFromCache","startOptimisticMode","stopOptimisticMode","FETCH_END","FETCH_ERROR","FETCH_START","showNotification","refreshView","useLogoutIfAccessDenied","optimisticCalls","useDataProvider","dispatch","dataProvider","isOptimistic","state","admin","ui","optimistic","store","logoutIfAccessDenied","dataProviderProxy","Proxy","get","target","name","resource","payload","options","type","toString","_a","_b","action","_c","undoable","_d","onSuccess","undefined","_e","onFailure","rest","Error","params","push","Promise","resolve","doQuery","resourceState","getState","resources","answerWithCache","performUndoableQuery","performQuery","window","addEventListener","warnBeforeClosingWindow","meta","fetch","once","isUndo","removeEventListener","then","response","process","env","NODE_ENV","requestPayload","fetchResponse","fetchStatus","replayOptimisticCalls","catch","error","console","loggedOut","message","body","event","preventDefault","returnValue","all","map","splice","fromCache"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;AAClDA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;AACpC,SAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjDD,MAAAA,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;AACA,WAAK,IAAII,CAAT,IAAcL,CAAd;AAAiB,YAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AADJ;AAEH;;AACD,WAAON,CAAP;AACH,GAPD;;AAQA,SAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,IAAIO,MAAM,GAAI,QAAQ,KAAKA,MAAd,IAAyB,UAAUV,CAAV,EAAaW,CAAb,EAAgB;AAClD,MAAIZ,CAAC,GAAG,EAAR;;AACA,OAAK,IAAIM,CAAT,IAAcL,CAAd;AAAiB,QAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,KAA8CM,CAAC,CAACC,OAAF,CAAUP,CAAV,IAAe,CAAjE,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AADJ;;AAEA,MAAIL,CAAC,IAAI,IAAL,IAAa,OAAOH,MAAM,CAACgB,qBAAd,KAAwC,UAAzD,EACI,KAAK,IAAIZ,CAAC,GAAG,CAAR,EAAWI,CAAC,GAAGR,MAAM,CAACgB,qBAAP,CAA6Bb,CAA7B,CAApB,EAAqDC,CAAC,GAAGI,CAAC,CAACD,MAA3D,EAAmEH,CAAC,EAApE,EAAwE;AACpE,QAAIU,CAAC,CAACC,OAAF,CAAUP,CAAC,CAACJ,CAAD,CAAX,IAAkB,CAAlB,IAAuBJ,MAAM,CAACS,SAAP,CAAiBQ,oBAAjB,CAAsCN,IAAtC,CAA2CR,CAA3C,EAA8CK,CAAC,CAACJ,CAAD,CAA/C,CAA3B,EACIF,CAAC,CAACM,CAAC,CAACJ,CAAD,CAAF,CAAD,GAAUD,CAAC,CAACK,CAAC,CAACJ,CAAD,CAAF,CAAX;AACP;AACL,SAAOF,CAAP;AACH,CAVD;;AAWA,SAASgB,UAAT,EAAqBC,OAArB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,QAAnC,QAAmD,aAAnD;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,SAASC,iBAAT,EAA4BC,kBAA5B,QAAsD,kBAAtD;AACA,SAASC,mBAAT,EAA8BC,kBAA9B,QAAyD,wBAAzD;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,WAAjC,QAAoD,yBAApD;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAOC,uBAAP,MAAoC,iCAApC,C,CACA;AACA;;AACA,IAAIC,eAAe,GAAG,EAAtB;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyFA,IAAIC,eAAe,GAAG,SAAlBA,eAAkB,GAAY;AAC9B,MAAIC,QAAQ,GAAGpB,WAAW,EAA1B;AACA,MAAIqB,YAAY,GAAGvB,UAAU,CAACK,mBAAD,CAAV,IAAmCI,mBAAtD;AACA,MAAIe,YAAY,GAAGrB,WAAW,CAAC,UAAUsB,KAAV,EAAiB;AAAE,WAAOA,KAAK,CAACC,KAAN,CAAYC,EAAZ,CAAeC,UAAtB;AAAmC,GAAvD,CAA9B;AACA,MAAIC,KAAK,GAAGzB,QAAQ,EAApB;AACA,MAAI0B,oBAAoB,GAAGX,uBAAuB,EAAlD;AACA,MAAIY,iBAAiB,GAAG9B,OAAO,CAAC,YAAY;AACxC,WAAO,IAAI+B,KAAJ,CAAUT,YAAV,EAAwB;AAC3BU,MAAAA,GAAG,EAAE,aAAUC,MAAV,EAAkBC,IAAlB,EAAwB;AACzB,YAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC1B;AACH;;AACD,eAAO,UAAUC,QAAV,EAAoBC,OAApB,EAA6BC,OAA7B,EAAsC;AACzC,cAAIC,IAAI,GAAGJ,IAAI,CAACK,QAAL,EAAX;;AACA,cAAIC,EAAE,GAAGH,OAAO,IAAI,EAApB;AAAA,cAAwBI,EAAE,GAAGD,EAAE,CAACE,MAAhC;AAAA,cAAwCA,MAAM,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,cAAhB,GAAiCA,EAAlF;AAAA,cAAsFE,EAAE,GAAGH,EAAE,CAACI,QAA9F;AAAA,cAAwGA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,KAAhB,GAAwBA,EAA3I;AAAA,cAA+IE,EAAE,GAAGL,EAAE,CAACM,SAAvJ;AAAA,cAAkKA,SAAS,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgBE,SAAhB,GAA4BF,EAA1M;AAAA,cAA8MG,EAAE,GAAGR,EAAE,CAACS,SAAtN;AAAA,cAAiOA,SAAS,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgBD,SAAhB,GAA4BC,EAAzQ;AAAA,cAA6QE,IAAI,GAAGxD,MAAM,CAAC8C,EAAD,EAAK,CAAC,QAAD,EAAW,UAAX,EAAuB,WAAvB,EAAoC,WAApC,CAAL,CAA1R;;AACA,cAAI,OAAOlB,YAAY,CAACgB,IAAD,CAAnB,KAA8B,UAAlC,EAA8C;AAC1C,kBAAM,IAAIa,KAAJ,CAAU,oCAAoCb,IAA9C,CAAN;AACH;;AACD,cAAIQ,SAAS,IAAI,OAAOA,SAAP,KAAqB,UAAtC,EAAkD;AAC9C,kBAAM,IAAIK,KAAJ,CAAU,yCAAV,CAAN;AACH;;AACD,cAAIF,SAAS,IAAI,OAAOA,SAAP,KAAqB,UAAtC,EAAkD;AAC9C,kBAAM,IAAIE,KAAJ,CAAU,yCAAV,CAAN;AACH;;AACD,cAAIP,QAAQ,IAAI,CAACE,SAAjB,EAA4B;AACxB,kBAAM,IAAIK,KAAJ,CAAU,+EAAV,CAAN;AACH;;AACD,cAAIC,MAAM,GAAG;AACTV,YAAAA,MAAM,EAAEA,MADC;AAETpB,YAAAA,YAAY,EAAEA,YAFL;AAGTD,YAAAA,QAAQ,EAAEA,QAHD;AAITQ,YAAAA,oBAAoB,EAAEA,oBAJb;AAKToB,YAAAA,SAAS,EAAEA,SALF;AAMTH,YAAAA,SAAS,EAAEA,SANF;AAOTV,YAAAA,OAAO,EAAEA,OAPA;AAQTD,YAAAA,QAAQ,EAAEA,QARD;AASTe,YAAAA,IAAI,EAAEA,IATG;AAUTtB,YAAAA,KAAK,EAAEA,KAVE;AAWTU,YAAAA,IAAI,EAAEA,IAXG;AAYTM,YAAAA,QAAQ,EAAEA;AAZD,WAAb;;AAcA,cAAIrB,YAAJ,EAAkB;AACd;AACA;AACA;AACAJ,YAAAA,eAAe,CAACkC,IAAhB,CAAqBD,MAArB;AACA,mBAAOE,OAAO,CAACC,OAAR,EAAP;AACH;;AACD,iBAAOC,OAAO,CAACJ,MAAD,CAAd;AACH,SArCD;AAsCH;AA3C0B,KAAxB,CAAP;AA6CH,GA9C8B,EA8C5B,CAAC9B,YAAD,EAAeD,QAAf,EAAyBE,YAAzB,EAAuCM,oBAAvC,EAA6DD,KAA7D,CA9C4B,CAA/B;AA+CA,SAAOE,iBAAP;AACH,CAtDD;;AAuDA,IAAI0B,OAAO,GAAG,SAAVA,OAAU,CAAUhB,EAAV,EAAc;AACxB,MAAIF,IAAI,GAAGE,EAAE,CAACF,IAAd;AAAA,MAAoBF,OAAO,GAAGI,EAAE,CAACJ,OAAjC;AAAA,MAA0CD,QAAQ,GAAGK,EAAE,CAACL,QAAxD;AAAA,MAAkEO,MAAM,GAAGF,EAAE,CAACE,MAA9E;AAAA,MAAsFQ,IAAI,GAAGV,EAAE,CAACU,IAAhG;AAAA,MAAsGJ,SAAS,GAAGN,EAAE,CAACM,SAArH;AAAA,MAAgIG,SAAS,GAAGT,EAAE,CAACS,SAA/I;AAAA,MAA0J3B,YAAY,GAAGkB,EAAE,CAAClB,YAA5K;AAAA,MAA0LD,QAAQ,GAAGmB,EAAE,CAACnB,QAAxM;AAAA,MAAkNO,KAAK,GAAGY,EAAE,CAACZ,KAA7N;AAAA,MAAoOgB,QAAQ,GAAGJ,EAAE,CAACI,QAAlP;AAAA,MAA4Pf,oBAAoB,GAAGW,EAAE,CAACX,oBAAtR;AACA,MAAI4B,aAAa,GAAG7B,KAAK,CAAC8B,QAAN,GAAiBjC,KAAjB,CAAuBkC,SAAvB,CAAiCxB,QAAjC,CAApB;;AACA,MAAI1B,iBAAiB,CAAC6B,IAAD,EAAOF,OAAP,EAAgBqB,aAAhB,CAArB,EAAqD;AACjD,WAAOG,eAAe,CAAC;AACnBtB,MAAAA,IAAI,EAAEA,IADa;AAEnBF,MAAAA,OAAO,EAAEA,OAFU;AAGnBD,MAAAA,QAAQ,EAAEA,QAHS;AAInBO,MAAAA,MAAM,EAAEA,MAJW;AAKnBQ,MAAAA,IAAI,EAAEA,IALa;AAMnBJ,MAAAA,SAAS,EAAEA,SANQ;AAOnBW,MAAAA,aAAa,EAAEA,aAPI;AAQnBpC,MAAAA,QAAQ,EAAEA;AARS,KAAD,CAAtB;AAUH;;AACD,SAAOuB,QAAQ,GACTiB,oBAAoB,CAAC;AACnBvB,IAAAA,IAAI,EAAEA,IADa;AAEnBF,IAAAA,OAAO,EAAEA,OAFU;AAGnBD,IAAAA,QAAQ,EAAEA,QAHS;AAInBO,IAAAA,MAAM,EAAEA,MAJW;AAKnBQ,IAAAA,IAAI,EAAEA,IALa;AAMnBJ,IAAAA,SAAS,EAAEA,SANQ;AAOnBG,IAAAA,SAAS,EAAEA,SAPQ;AAQnB3B,IAAAA,YAAY,EAAEA,YARK;AASnBD,IAAAA,QAAQ,EAAEA,QATS;AAUnBQ,IAAAA,oBAAoB,EAAEA;AAVH,GAAD,CADX,GAaTiC,YAAY,CAAC;AACXxB,IAAAA,IAAI,EAAEA,IADK;AAEXF,IAAAA,OAAO,EAAEA,OAFE;AAGXD,IAAAA,QAAQ,EAAEA,QAHC;AAIXO,IAAAA,MAAM,EAAEA,MAJG;AAKXQ,IAAAA,IAAI,EAAEA,IALK;AAMXJ,IAAAA,SAAS,EAAEA,SANA;AAOXG,IAAAA,SAAS,EAAEA,SAPA;AAQX3B,IAAAA,YAAY,EAAEA,YARH;AASXD,IAAAA,QAAQ,EAAEA,QATC;AAUXQ,IAAAA,oBAAoB,EAAEA;AAVX,GAAD,CAblB;AAyBH,CAxCD;AAyCA;;;;;;;;;;;AASA,IAAIgC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAUrB,EAAV,EAAc;AACrC,MAAIF,IAAI,GAAGE,EAAE,CAACF,IAAd;AAAA,MAAoBF,OAAO,GAAGI,EAAE,CAACJ,OAAjC;AAAA,MAA0CD,QAAQ,GAAGK,EAAE,CAACL,QAAxD;AAAA,MAAkEO,MAAM,GAAGF,EAAE,CAACE,MAA9E;AAAA,MAAsFQ,IAAI,GAAGV,EAAE,CAACU,IAAhG;AAAA,MAAsGJ,SAAS,GAAGN,EAAE,CAACM,SAArH;AAAA,MAAgIG,SAAS,GAAGT,EAAE,CAACS,SAA/I;AAAA,MAA0J3B,YAAY,GAAGkB,EAAE,CAAClB,YAA5K;AAAA,MAA0LD,QAAQ,GAAGmB,EAAE,CAACnB,QAAxM;AAAA,MAAkNQ,oBAAoB,GAAGW,EAAE,CAACX,oBAA5O;AACAR,EAAAA,QAAQ,CAACV,mBAAmB,EAApB,CAAR;;AACA,MAAIoD,MAAJ,EAAY;AACRA,IAAAA,MAAM,CAACC,gBAAP,CAAwB,cAAxB,EAAwCC,uBAAxC;AACH;;AACD5C,EAAAA,QAAQ,CAAC;AACLiB,IAAAA,IAAI,EAAEI,MADD;AAELN,IAAAA,OAAO,EAAEA,OAFJ;AAGL8B,IAAAA,IAAI,EAAEtF,QAAQ,CAAC;AAAEuD,MAAAA,QAAQ,EAAEA;AAAZ,KAAD,EAAyBe,IAAzB;AAHT,GAAD,CAAR;AAKA7B,EAAAA,QAAQ,CAAC;AACLiB,IAAAA,IAAI,EAAEI,MAAM,GAAG,aADV;AAELN,IAAAA,OAAO,EAAEA,OAFJ;AAGL8B,IAAAA,IAAI,EAAE;AACF/B,MAAAA,QAAQ,EAAEA,QADR;AAEFgC,MAAAA,KAAK,EAAE5D,YAAY,CAAC+B,IAAD,CAFjB;AAGFX,MAAAA,UAAU,EAAE;AAHV;AAHD,GAAD,CAAR;AASAmB,EAAAA,SAAS,IAAIA,SAAS,CAAC,EAAD,CAAtB;AACAxC,EAAAA,oBAAoB,CAAC8D,IAArB,CAA0B,KAA1B,EAAiC,UAAU5B,EAAV,EAAc;AAC3C,QAAI6B,MAAM,GAAG7B,EAAE,CAAC6B,MAAhB;AACAhD,IAAAA,QAAQ,CAACT,kBAAkB,EAAnB,CAAR;;AACA,QAAIyD,MAAJ,EAAY;AACRhD,MAAAA,QAAQ,CAACL,gBAAgB,CAAC,0BAAD,CAAjB,CAAR;AACAK,MAAAA,QAAQ,CAACJ,WAAW,EAAZ,CAAR;;AACA,UAAI8C,MAAJ,EAAY;AACRA,QAAAA,MAAM,CAACO,mBAAP,CAA2B,cAA3B,EAA2CL,uBAA3C;AACH;;AACD;AACH;;AACD5C,IAAAA,QAAQ,CAAC;AACLiB,MAAAA,IAAI,EAAEI,MAAM,GAAG,UADV;AAELN,MAAAA,OAAO,EAAEA,OAFJ;AAGL8B,MAAAA,IAAI,EAAEtF,QAAQ,CAAC;AAAEuD,QAAAA,QAAQ,EAAEA;AAAZ,OAAD,EAAyBe,IAAzB;AAHT,KAAD,CAAR;AAKA7B,IAAAA,QAAQ,CAAC;AAAEiB,MAAAA,IAAI,EAAEvB;AAAR,KAAD,CAAR;;AACA,QAAI;AACAO,MAAAA,YAAY,CAACgB,IAAD,CAAZ,CAAmBH,QAAnB,EAA6BC,OAA7B,EACKmC,IADL,CACU,UAAUC,QAAV,EAAoB;AAC1B,YAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvCtE,UAAAA,sBAAsB,CAACmE,QAAD,EAAWlC,IAAX,CAAtB;AACH;;AACDjB,QAAAA,QAAQ,CAAC;AACLiB,UAAAA,IAAI,EAAEI,MAAM,GAAG,UADV;AAELN,UAAAA,OAAO,EAAEoC,QAFJ;AAGLI,UAAAA,cAAc,EAAExC,OAHX;AAIL8B,UAAAA,IAAI,EAAEtF,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKsE,IAAL,CAAT,EAAqB;AAAEf,YAAAA,QAAQ,EAAEA,QAAZ;AAAsB0C,YAAAA,aAAa,EAAEtE,YAAY,CAAC+B,IAAD,CAAjD;AAAyDwC,YAAAA,WAAW,EAAEjE;AAAtE,WAArB;AAJT,SAAD,CAAR;AAMAQ,QAAAA,QAAQ,CAAC;AAAEiB,UAAAA,IAAI,EAAEzB;AAAR,SAAD,CAAR;;AACA,YAAIkD,MAAJ,EAAY;AACRA,UAAAA,MAAM,CAACO,mBAAP,CAA2B,cAA3B,EAA2CL,uBAA3C;AACH;;AACDc,QAAAA,qBAAqB;AACxB,OAhBD,EAiBKC,KAjBL,CAiBW,UAAUC,KAAV,EAAiB;AACxB,YAAIlB,MAAJ,EAAY;AACRA,UAAAA,MAAM,CAACO,mBAAP,CAA2B,cAA3B,EAA2CL,uBAA3C;AACH;;AACD,YAAIQ,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvCO,UAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;;AACD,eAAOpD,oBAAoB,CAACoD,KAAD,CAApB,CAA4BV,IAA5B,CAAiC,UAAUY,SAAV,EAAqB;AACzD,cAAIA,SAAJ,EACI;AACJ9D,UAAAA,QAAQ,CAAC;AACLiB,YAAAA,IAAI,EAAEI,MAAM,GAAG,UADV;AAELuC,YAAAA,KAAK,EAAEA,KAAK,CAACG,OAAN,GAAgBH,KAAK,CAACG,OAAtB,GAAgCH,KAFlC;AAGL7C,YAAAA,OAAO,EAAE6C,KAAK,CAACI,IAAN,GAAaJ,KAAK,CAACI,IAAnB,GAA0B,IAH9B;AAILT,YAAAA,cAAc,EAAExC,OAJX;AAKL8B,YAAAA,IAAI,EAAEtF,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKsE,IAAL,CAAT,EAAqB;AAAEf,cAAAA,QAAQ,EAAEA,QAAZ;AAAsB0C,cAAAA,aAAa,EAAEtE,YAAY,CAAC+B,IAAD,CAAjD;AAAyDwC,cAAAA,WAAW,EAAEhE;AAAtE,aAArB;AALT,WAAD,CAAR;AAOAO,UAAAA,QAAQ,CAAC;AAAEiB,YAAAA,IAAI,EAAExB,WAAR;AAAqBmE,YAAAA,KAAK,EAAEA;AAA5B,WAAD,CAAR;AACAhC,UAAAA,SAAS,IAAIA,SAAS,CAACgC,KAAD,CAAtB;AACA,gBAAMA,KAAN;AACH,SAbM,CAAP;AAcH,OAtCD;AAuCH,KAxCD,CAyCA,OAAOtF,CAAP,EAAU;AACN,UAAI8E,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvCO,QAAAA,OAAO,CAACD,KAAR,CAActF,CAAd;AACH;;AACD,YAAM,IAAIwD,KAAJ,CAAU,+EAAV,CAAN;AACH;AACJ,GAhED;AAiEA,SAAOG,OAAO,CAACC,OAAR,CAAgB,EAAhB,CAAP;AACH,CAvFD,C,CAwFA;;;AACA,IAAIU,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAUqB,KAAV,EAAiB;AAC3CA,EAAAA,KAAK,CAACC,cAAN,GAD2C,CACnB;;AACxBD,EAAAA,KAAK,CAACE,WAAN,GAAoB,EAApB,CAF2C,CAEnB;;AACxB,SAAO,yEAAP,CAH2C,CAGuC;AACrF,CAJD,C,CAKA;;;AACA,IAAIT,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAY;AACpCzB,EAAAA,OAAO,CAACmC,GAAR,CAAYtE,eAAe,CAACuE,GAAhB,CAAoB,UAAUtC,MAAV,EAAkB;AAC9C,WAAOE,OAAO,CAACC,OAAR,CAAgBC,OAAO,CAAChE,IAAR,CAAa,IAAb,EAAmB4D,MAAnB,CAAhB,CAAP;AACH,GAFW,CAAZ;AAGAjC,EAAAA,eAAe,CAACwE,MAAhB,CAAuB,CAAvB,EAA0BxE,eAAe,CAAC/B,MAA1C;AACH,CALD;AAMA;;;;;;;;AAMA,IAAI0E,YAAY,GAAG,SAAfA,YAAe,CAAUtB,EAAV,EAAc;AAC7B,MAAIF,IAAI,GAAGE,EAAE,CAACF,IAAd;AAAA,MAAoBF,OAAO,GAAGI,EAAE,CAACJ,OAAjC;AAAA,MAA0CD,QAAQ,GAAGK,EAAE,CAACL,QAAxD;AAAA,MAAkEO,MAAM,GAAGF,EAAE,CAACE,MAA9E;AAAA,MAAsFQ,IAAI,GAAGV,EAAE,CAACU,IAAhG;AAAA,MAAsGJ,SAAS,GAAGN,EAAE,CAACM,SAArH;AAAA,MAAgIG,SAAS,GAAGT,EAAE,CAACS,SAA/I;AAAA,MAA0J3B,YAAY,GAAGkB,EAAE,CAAClB,YAA5K;AAAA,MAA0LD,QAAQ,GAAGmB,EAAE,CAACnB,QAAxM;AAAA,MAAkNQ,oBAAoB,GAAGW,EAAE,CAACX,oBAA5O;AACAR,EAAAA,QAAQ,CAAC;AACLiB,IAAAA,IAAI,EAAEI,MADD;AAELN,IAAAA,OAAO,EAAEA,OAFJ;AAGL8B,IAAAA,IAAI,EAAEtF,QAAQ,CAAC;AAAEuD,MAAAA,QAAQ,EAAEA;AAAZ,KAAD,EAAyBe,IAAzB;AAHT,GAAD,CAAR;AAKA7B,EAAAA,QAAQ,CAAC;AACLiB,IAAAA,IAAI,EAAEI,MAAM,GAAG,UADV;AAELN,IAAAA,OAAO,EAAEA,OAFJ;AAGL8B,IAAAA,IAAI,EAAEtF,QAAQ,CAAC;AAAEuD,MAAAA,QAAQ,EAAEA;AAAZ,KAAD,EAAyBe,IAAzB;AAHT,GAAD,CAAR;AAKA7B,EAAAA,QAAQ,CAAC;AAAEiB,IAAAA,IAAI,EAAEvB;AAAR,GAAD,CAAR;;AACA,MAAI;AACA,WAAOO,YAAY,CAACgB,IAAD,CAAZ,CAAmBH,QAAnB,EAA6BC,OAA7B,EACFmC,IADE,CACG,UAAUC,QAAV,EAAoB;AAC1B,UAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvCtE,QAAAA,sBAAsB,CAACmE,QAAD,EAAWlC,IAAX,CAAtB;AACH;;AACDjB,MAAAA,QAAQ,CAAC;AACLiB,QAAAA,IAAI,EAAEI,MAAM,GAAG,UADV;AAELN,QAAAA,OAAO,EAAEoC,QAFJ;AAGLI,QAAAA,cAAc,EAAExC,OAHX;AAIL8B,QAAAA,IAAI,EAAEtF,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKsE,IAAL,CAAT,EAAqB;AAAEf,UAAAA,QAAQ,EAAEA,QAAZ;AAAsB0C,UAAAA,aAAa,EAAEtE,YAAY,CAAC+B,IAAD,CAAjD;AAAyDwC,UAAAA,WAAW,EAAEjE;AAAtE,SAArB;AAJT,OAAD,CAAR;AAMAQ,MAAAA,QAAQ,CAAC;AAAEiB,QAAAA,IAAI,EAAEzB;AAAR,OAAD,CAAR;AACAiC,MAAAA,SAAS,IAAIA,SAAS,CAAC0B,QAAD,CAAtB;AACA,aAAOA,QAAP;AACH,KAdM,EAeFQ,KAfE,CAeI,UAAUC,KAAV,EAAiB;AACxB,UAAIR,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvCO,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;;AACD,aAAOpD,oBAAoB,CAACoD,KAAD,CAApB,CAA4BV,IAA5B,CAAiC,UAAUY,SAAV,EAAqB;AACzD,YAAIA,SAAJ,EACI;AACJ9D,QAAAA,QAAQ,CAAC;AACLiB,UAAAA,IAAI,EAAEI,MAAM,GAAG,UADV;AAELuC,UAAAA,KAAK,EAAEA,KAAK,CAACG,OAAN,GAAgBH,KAAK,CAACG,OAAtB,GAAgCH,KAFlC;AAGL7C,UAAAA,OAAO,EAAE6C,KAAK,CAACI,IAAN,GAAaJ,KAAK,CAACI,IAAnB,GAA0B,IAH9B;AAILT,UAAAA,cAAc,EAAExC,OAJX;AAKL8B,UAAAA,IAAI,EAAEtF,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKsE,IAAL,CAAT,EAAqB;AAAEf,YAAAA,QAAQ,EAAEA,QAAZ;AAAsB0C,YAAAA,aAAa,EAAEtE,YAAY,CAAC+B,IAAD,CAAjD;AAAyDwC,YAAAA,WAAW,EAAEhE;AAAtE,WAArB;AALT,SAAD,CAAR;AAOAO,QAAAA,QAAQ,CAAC;AAAEiB,UAAAA,IAAI,EAAExB,WAAR;AAAqBmE,UAAAA,KAAK,EAAEA;AAA5B,SAAD,CAAR;AACAhC,QAAAA,SAAS,IAAIA,SAAS,CAACgC,KAAD,CAAtB;AACA,cAAMA,KAAN;AACH,OAbM,CAAP;AAcH,KAjCM,CAAP;AAkCH,GAnCD,CAoCA,OAAOtF,CAAP,EAAU;AACN,QAAI8E,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvCO,MAAAA,OAAO,CAACD,KAAR,CAActF,CAAd;AACH;;AACD,UAAM,IAAIwD,KAAJ,CAAU,+EAAV,CAAN;AACH;AACJ,CAvDD;;AAwDA,IAAIS,eAAe,GAAG,SAAlBA,eAAkB,CAAUpB,EAAV,EAAc;AAChC,MAAIF,IAAI,GAAGE,EAAE,CAACF,IAAd;AAAA,MAAoBF,OAAO,GAAGI,EAAE,CAACJ,OAAjC;AAAA,MAA0CD,QAAQ,GAAGK,EAAE,CAACL,QAAxD;AAAA,MAAkEO,MAAM,GAAGF,EAAE,CAACE,MAA9E;AAAA,MAAsFQ,IAAI,GAAGV,EAAE,CAACU,IAAhG;AAAA,MAAsGJ,SAAS,GAAGN,EAAE,CAACM,SAArH;AAAA,MAAgIW,aAAa,GAAGjB,EAAE,CAACiB,aAAnJ;AAAA,MAAkKpC,QAAQ,GAAGmB,EAAE,CAACnB,QAAhL;AACAA,EAAAA,QAAQ,CAAC;AACLiB,IAAAA,IAAI,EAAEI,MADD;AAELN,IAAAA,OAAO,EAAEA,OAFJ;AAGL8B,IAAAA,IAAI,EAAEtF,QAAQ,CAAC;AAAEuD,MAAAA,QAAQ,EAAEA;AAAZ,KAAD,EAAyBe,IAAzB;AAHT,GAAD,CAAR;AAKA,MAAIsB,QAAQ,GAAG9D,kBAAkB,CAAC4B,IAAD,EAAOF,OAAP,EAAgBqB,aAAhB,CAAjC;AACApC,EAAAA,QAAQ,CAAC;AACLiB,IAAAA,IAAI,EAAEI,MAAM,GAAG,UADV;AAELN,IAAAA,OAAO,EAAEoC,QAFJ;AAGLI,IAAAA,cAAc,EAAExC,OAHX;AAIL8B,IAAAA,IAAI,EAAEtF,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKsE,IAAL,CAAT,EAAqB;AAAEf,MAAAA,QAAQ,EAAEA,QAAZ;AAAsB0C,MAAAA,aAAa,EAAEtE,YAAY,CAAC+B,IAAD,CAAjD;AAAyDwC,MAAAA,WAAW,EAAEjE,SAAtE;AAAiF+E,MAAAA,SAAS,EAAE;AAA5F,KAArB;AAJT,GAAD,CAAR;AAMA9C,EAAAA,SAAS,IAAIA,SAAS,CAAC0B,QAAD,CAAtB;AACA,SAAOlB,OAAO,CAACC,OAAR,CAAgBiB,QAAhB,CAAP;AACH,CAhBD;;AAiBA,eAAepD,eAAf","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { useContext, useMemo } from 'react';\nimport { useDispatch, useSelector, useStore } from 'react-redux';\nimport DataProviderContext from './DataProviderContext';\nimport validateResponseFormat from './validateResponseFormat';\nimport undoableEventEmitter from './undoableEventEmitter';\nimport getFetchType from './getFetchType';\nimport defaultDataProvider from './defaultDataProvider';\nimport { canReplyWithCache, getResultFromCache } from './replyWithCache';\nimport { startOptimisticMode, stopOptimisticMode, } from '../actions/undoActions';\nimport { FETCH_END, FETCH_ERROR, FETCH_START } from '../actions/fetchActions';\nimport { showNotification } from '../actions/notificationActions';\nimport { refreshView } from '../actions/uiActions';\nimport useLogoutIfAccessDenied from '../auth/useLogoutIfAccessDenied';\n// List of dataProvider calls emitted while in optimistic mode.\n// These calls get replayed once the dataProvider exits optimistic mode\nvar optimisticCalls = [];\n/**\n * Hook for getting a dataProvider\n *\n * Gets a dataProvider object, which behaves just like the real dataProvider\n * (same methods returning a Promise). But it's actually a Proxy object, which\n * dispatches Redux actions along the process. The benefit is that react-admin\n * tracks the loading state when using this hook, and stores results in the\n * Redux store for future use.\n *\n * In addition to the 2 usual parameters of the dataProvider methods (resource,\n * payload), the Proxy supports a third parameter for every call. It's an\n * object literal which may contain side effects, or make the action optimistic\n * (with undoable: true).\n *\n * @return dataProvider\n *\n * @example Basic usage\n *\n * import * as React from 'react';\nimport { useState } from 'react';\n * import { useDataProvider } from 'react-admin';\n *\n * const PostList = () => {\n *      const [posts, setPosts] = useState([])\n *      const dataProvider = useDataProvider();\n *      useEffect(() => {\n *          dataProvider.getList('posts', { filter: { status: 'pending' }})\n *            .then(({ data }) => setPosts(data));\n *      }, [])\n *\n *      return (\n *          <Fragment>\n *              {posts.map((post, key) => <PostDetail post={post} key={key} />)}\n *          </Fragment>\n *     }\n * }\n *\n * @example Handling all states (loading, error, success)\n *\n * import { useState, useEffect } from 'react';\n * import { useDataProvider } from 'react-admin';\n *\n * const UserProfile = ({ userId }) => {\n *     const dataProvider = useDataProvider();\n *     const [user, setUser] = useState();\n *     const [loading, setLoading] = useState(true);\n *     const [error, setError] = useState();\n *     useEffect(() => {\n *         dataProvider.getOne('users', { id: userId })\n *             .then(({ data }) => {\n *                 setUser(data);\n *                 setLoading(false);\n *             })\n *             .catch(error => {\n *                 setError(error);\n *                 setLoading(false);\n *             })\n *     }, []);\n *\n *     if (loading) return <Loading />;\n *     if (error) return <Error />\n *     if (!user) return null;\n *\n *     return (\n *         <ul>\n *             <li>Name: {user.name}</li>\n *             <li>Email: {user.email}</li>\n *         </ul>\n *     )\n * }\n *\n * @example Action customization\n *\n * dataProvider.getOne('users', { id: 123 });\n * // will dispatch the following actions:\n * // - CUSTOM_FETCH\n * // - CUSTOM_FETCH_LOADING\n * // - FETCH_START\n * // - CUSTOM_FETCH_SUCCESS\n * // - FETCH_END\n *\n * dataProvider.getOne('users', { id: 123 }, { action: CRUD_GET_ONE });\n * // will dispatch the following actions:\n * // - CRUD_GET_ONE\n * // - CRUD_GET_ONE_LOADING\n * // - FETCH_START\n * // - CRUD_GET_ONE_SUCCESS\n * // - FETCH_END\n */\nvar useDataProvider = function () {\n    var dispatch = useDispatch();\n    var dataProvider = useContext(DataProviderContext) || defaultDataProvider;\n    var isOptimistic = useSelector(function (state) { return state.admin.ui.optimistic; });\n    var store = useStore();\n    var logoutIfAccessDenied = useLogoutIfAccessDenied();\n    var dataProviderProxy = useMemo(function () {\n        return new Proxy(dataProvider, {\n            get: function (target, name) {\n                if (typeof name === 'symbol') {\n                    return;\n                }\n                return function (resource, payload, options) {\n                    var type = name.toString();\n                    var _a = options || {}, _b = _a.action, action = _b === void 0 ? 'CUSTOM_FETCH' : _b, _c = _a.undoable, undoable = _c === void 0 ? false : _c, _d = _a.onSuccess, onSuccess = _d === void 0 ? undefined : _d, _e = _a.onFailure, onFailure = _e === void 0 ? undefined : _e, rest = __rest(_a, [\"action\", \"undoable\", \"onSuccess\", \"onFailure\"]);\n                    if (typeof dataProvider[type] !== 'function') {\n                        throw new Error(\"Unknown dataProvider function: \" + type);\n                    }\n                    if (onSuccess && typeof onSuccess !== 'function') {\n                        throw new Error('The onSuccess option must be a function');\n                    }\n                    if (onFailure && typeof onFailure !== 'function') {\n                        throw new Error('The onFailure option must be a function');\n                    }\n                    if (undoable && !onSuccess) {\n                        throw new Error('You must pass an onSuccess callback calling notify() to use the undoable mode');\n                    }\n                    var params = {\n                        action: action,\n                        dataProvider: dataProvider,\n                        dispatch: dispatch,\n                        logoutIfAccessDenied: logoutIfAccessDenied,\n                        onFailure: onFailure,\n                        onSuccess: onSuccess,\n                        payload: payload,\n                        resource: resource,\n                        rest: rest,\n                        store: store,\n                        type: type,\n                        undoable: undoable,\n                    };\n                    if (isOptimistic) {\n                        // in optimistic mode, all fetch calls are stacked, to be\n                        // executed once the dataProvider leaves optimistic mode.\n                        // In the meantime, the admin uses data from the store.\n                        optimisticCalls.push(params);\n                        return Promise.resolve();\n                    }\n                    return doQuery(params);\n                };\n            },\n        });\n    }, [dataProvider, dispatch, isOptimistic, logoutIfAccessDenied, store]);\n    return dataProviderProxy;\n};\nvar doQuery = function (_a) {\n    var type = _a.type, payload = _a.payload, resource = _a.resource, action = _a.action, rest = _a.rest, onSuccess = _a.onSuccess, onFailure = _a.onFailure, dataProvider = _a.dataProvider, dispatch = _a.dispatch, store = _a.store, undoable = _a.undoable, logoutIfAccessDenied = _a.logoutIfAccessDenied;\n    var resourceState = store.getState().admin.resources[resource];\n    if (canReplyWithCache(type, payload, resourceState)) {\n        return answerWithCache({\n            type: type,\n            payload: payload,\n            resource: resource,\n            action: action,\n            rest: rest,\n            onSuccess: onSuccess,\n            resourceState: resourceState,\n            dispatch: dispatch,\n        });\n    }\n    return undoable\n        ? performUndoableQuery({\n            type: type,\n            payload: payload,\n            resource: resource,\n            action: action,\n            rest: rest,\n            onSuccess: onSuccess,\n            onFailure: onFailure,\n            dataProvider: dataProvider,\n            dispatch: dispatch,\n            logoutIfAccessDenied: logoutIfAccessDenied,\n        })\n        : performQuery({\n            type: type,\n            payload: payload,\n            resource: resource,\n            action: action,\n            rest: rest,\n            onSuccess: onSuccess,\n            onFailure: onFailure,\n            dataProvider: dataProvider,\n            dispatch: dispatch,\n            logoutIfAccessDenied: logoutIfAccessDenied,\n        });\n};\n/**\n * In undoable mode, the hook dispatches an optimistic action and executes\n * the success side effects right away. Then it waits for a few seconds to\n * actually call the dataProvider - unless the user dispatches an Undo action.\n *\n * We call that \"optimistic\" because the hook returns a resolved Promise\n * immediately (although it has an empty value). That only works if the\n * caller reads the result from the Redux store, not from the Promise.\n */\nvar performUndoableQuery = function (_a) {\n    var type = _a.type, payload = _a.payload, resource = _a.resource, action = _a.action, rest = _a.rest, onSuccess = _a.onSuccess, onFailure = _a.onFailure, dataProvider = _a.dataProvider, dispatch = _a.dispatch, logoutIfAccessDenied = _a.logoutIfAccessDenied;\n    dispatch(startOptimisticMode());\n    if (window) {\n        window.addEventListener('beforeunload', warnBeforeClosingWindow);\n    }\n    dispatch({\n        type: action,\n        payload: payload,\n        meta: __assign({ resource: resource }, rest),\n    });\n    dispatch({\n        type: action + \"_OPTIMISTIC\",\n        payload: payload,\n        meta: {\n            resource: resource,\n            fetch: getFetchType(type),\n            optimistic: true,\n        },\n    });\n    onSuccess && onSuccess({});\n    undoableEventEmitter.once('end', function (_a) {\n        var isUndo = _a.isUndo;\n        dispatch(stopOptimisticMode());\n        if (isUndo) {\n            dispatch(showNotification('ra.notification.canceled'));\n            dispatch(refreshView());\n            if (window) {\n                window.removeEventListener('beforeunload', warnBeforeClosingWindow);\n            }\n            return;\n        }\n        dispatch({\n            type: action + \"_LOADING\",\n            payload: payload,\n            meta: __assign({ resource: resource }, rest),\n        });\n        dispatch({ type: FETCH_START });\n        try {\n            dataProvider[type](resource, payload)\n                .then(function (response) {\n                if (process.env.NODE_ENV !== 'production') {\n                    validateResponseFormat(response, type);\n                }\n                dispatch({\n                    type: action + \"_SUCCESS\",\n                    payload: response,\n                    requestPayload: payload,\n                    meta: __assign(__assign({}, rest), { resource: resource, fetchResponse: getFetchType(type), fetchStatus: FETCH_END }),\n                });\n                dispatch({ type: FETCH_END });\n                if (window) {\n                    window.removeEventListener('beforeunload', warnBeforeClosingWindow);\n                }\n                replayOptimisticCalls();\n            })\n                .catch(function (error) {\n                if (window) {\n                    window.removeEventListener('beforeunload', warnBeforeClosingWindow);\n                }\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                return logoutIfAccessDenied(error).then(function (loggedOut) {\n                    if (loggedOut)\n                        return;\n                    dispatch({\n                        type: action + \"_FAILURE\",\n                        error: error.message ? error.message : error,\n                        payload: error.body ? error.body : null,\n                        requestPayload: payload,\n                        meta: __assign(__assign({}, rest), { resource: resource, fetchResponse: getFetchType(type), fetchStatus: FETCH_ERROR }),\n                    });\n                    dispatch({ type: FETCH_ERROR, error: error });\n                    onFailure && onFailure(error);\n                    throw error;\n                });\n            });\n        }\n        catch (e) {\n            if (process.env.NODE_ENV !== 'production') {\n                console.error(e);\n            }\n            throw new Error('The dataProvider threw an error. It should return a rejected Promise instead.');\n        }\n    });\n    return Promise.resolve({});\n};\n// event listener added as window.onbeforeunload when starting optimistic mode, and removed when it ends\nvar warnBeforeClosingWindow = function (event) {\n    event.preventDefault(); // standard\n    event.returnValue = ''; // Chrome\n    return 'Your latest modifications are not yet sent to the server. Are you sure?'; // Old IE\n};\n// Replay calls recorded while in optimistic mode\nvar replayOptimisticCalls = function () {\n    Promise.all(optimisticCalls.map(function (params) {\n        return Promise.resolve(doQuery.call(null, params));\n    }));\n    optimisticCalls.splice(0, optimisticCalls.length);\n};\n/**\n * In normal mode, the hook calls the dataProvider. When a successful response\n * arrives, the hook dispatches a SUCCESS action, executes success side effects\n * and returns the response. If the response is an error, the hook dispatches\n * a FAILURE action, executes failure side effects, and throws an error.\n */\nvar performQuery = function (_a) {\n    var type = _a.type, payload = _a.payload, resource = _a.resource, action = _a.action, rest = _a.rest, onSuccess = _a.onSuccess, onFailure = _a.onFailure, dataProvider = _a.dataProvider, dispatch = _a.dispatch, logoutIfAccessDenied = _a.logoutIfAccessDenied;\n    dispatch({\n        type: action,\n        payload: payload,\n        meta: __assign({ resource: resource }, rest),\n    });\n    dispatch({\n        type: action + \"_LOADING\",\n        payload: payload,\n        meta: __assign({ resource: resource }, rest),\n    });\n    dispatch({ type: FETCH_START });\n    try {\n        return dataProvider[type](resource, payload)\n            .then(function (response) {\n            if (process.env.NODE_ENV !== 'production') {\n                validateResponseFormat(response, type);\n            }\n            dispatch({\n                type: action + \"_SUCCESS\",\n                payload: response,\n                requestPayload: payload,\n                meta: __assign(__assign({}, rest), { resource: resource, fetchResponse: getFetchType(type), fetchStatus: FETCH_END }),\n            });\n            dispatch({ type: FETCH_END });\n            onSuccess && onSuccess(response);\n            return response;\n        })\n            .catch(function (error) {\n            if (process.env.NODE_ENV !== 'production') {\n                console.error(error);\n            }\n            return logoutIfAccessDenied(error).then(function (loggedOut) {\n                if (loggedOut)\n                    return;\n                dispatch({\n                    type: action + \"_FAILURE\",\n                    error: error.message ? error.message : error,\n                    payload: error.body ? error.body : null,\n                    requestPayload: payload,\n                    meta: __assign(__assign({}, rest), { resource: resource, fetchResponse: getFetchType(type), fetchStatus: FETCH_ERROR }),\n                });\n                dispatch({ type: FETCH_ERROR, error: error });\n                onFailure && onFailure(error);\n                throw error;\n            });\n        });\n    }\n    catch (e) {\n        if (process.env.NODE_ENV !== 'production') {\n            console.error(e);\n        }\n        throw new Error('The dataProvider threw an error. It should return a rejected Promise instead.');\n    }\n};\nvar answerWithCache = function (_a) {\n    var type = _a.type, payload = _a.payload, resource = _a.resource, action = _a.action, rest = _a.rest, onSuccess = _a.onSuccess, resourceState = _a.resourceState, dispatch = _a.dispatch;\n    dispatch({\n        type: action,\n        payload: payload,\n        meta: __assign({ resource: resource }, rest),\n    });\n    var response = getResultFromCache(type, payload, resourceState);\n    dispatch({\n        type: action + \"_SUCCESS\",\n        payload: response,\n        requestPayload: payload,\n        meta: __assign(__assign({}, rest), { resource: resource, fetchResponse: getFetchType(type), fetchStatus: FETCH_END, fromCache: true }),\n    });\n    onSuccess && onSuccess(response);\n    return Promise.resolve(response);\n};\nexport default useDataProvider;\n"]},"metadata":{},"sourceType":"module"}