{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport inflection from 'inflection';\nimport { useListController, getElementsFromRecords, InferredElement } from 'ra-core';\nimport { ListView } from './List';\nimport listFieldTypes from './listFieldTypes';\n\nvar ListViewGuesser = function ListViewGuesser(props) {\n  var ids = props.ids,\n      data = props.data,\n      resource = props.resource;\n\n  var _a = useState(null),\n      inferredChild = _a[0],\n      setInferredChild = _a[1];\n\n  useEffect(function () {\n    if (ids.length > 0 && data && !inferredChild) {\n      var inferredElements = getElementsFromRecords(ids.map(function (id) {\n        return data[id];\n      }), listFieldTypes);\n      var inferredChild_1 = new InferredElement(listFieldTypes.table, null, inferredElements);\n      process.env.NODE_ENV !== 'production' && // eslint-disable-next-line no-console\n      console.log(\"Guessed List:\\n\\nexport const \" + inflection.capitalize(inflection.singularize(resource)) + \"List = props => (\\n    <List {...props}>\\n\" + inferredChild_1.getRepresentation() + \"\\n    </List>\\n);\");\n      setInferredChild(inferredChild_1.getElement());\n    }\n  }, [data, ids, inferredChild, resource]);\n  return React.createElement(ListView, __assign({}, props), inferredChild);\n};\n\nListViewGuesser.propTypes = ListView.propTypes;\n\nvar ListGuesser = function ListGuesser(props) {\n  return React.createElement(ListViewGuesser, __assign({}, props, useListController(props)));\n};\n\nexport default ListGuesser;","map":{"version":3,"sources":["/home/toor/Development/swdv-620-web-apps-final-project/ReactJsClient/node_modules/ra-ui-materialui/esm/list/ListGuesser.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","useState","useEffect","inflection","useListController","getElementsFromRecords","InferredElement","ListView","listFieldTypes","ListViewGuesser","props","ids","data","resource","_a","inferredChild","setInferredChild","inferredElements","map","id","inferredChild_1","table","process","env","NODE_ENV","console","log","capitalize","singularize","getRepresentation","getElement","createElement","propTypes","ListGuesser"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;AAClDA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;AACpC,SAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjDD,MAAAA,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;AACA,WAAK,IAAII,CAAT,IAAcL,CAAd;AAAiB,YAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AADJ;AAEH;;AACD,WAAON,CAAP;AACH,GAPD;;AAQA,SAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,OAAO,KAAKO,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,iBAAT,EAA4BC,sBAA5B,EAAoDC,eAApD,QAA4E,SAA5E;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AACA,IAAIC,eAAe,GAAG,SAAlBA,eAAkB,CAAUC,KAAV,EAAiB;AACnC,MAAIC,GAAG,GAAGD,KAAK,CAACC,GAAhB;AAAA,MAAqBC,IAAI,GAAGF,KAAK,CAACE,IAAlC;AAAA,MAAwCC,QAAQ,GAAGH,KAAK,CAACG,QAAzD;;AACA,MAAIC,EAAE,GAAGb,QAAQ,CAAC,IAAD,CAAjB;AAAA,MAAyBc,aAAa,GAAGD,EAAE,CAAC,CAAD,CAA3C;AAAA,MAAgDE,gBAAgB,GAAGF,EAAE,CAAC,CAAD,CAArE;;AACAZ,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAIS,GAAG,CAACjB,MAAJ,GAAa,CAAb,IAAkBkB,IAAlB,IAA0B,CAACG,aAA/B,EAA8C;AAC1C,UAAIE,gBAAgB,GAAGZ,sBAAsB,CAACM,GAAG,CAACO,GAAJ,CAAQ,UAAUC,EAAV,EAAc;AAAE,eAAOP,IAAI,CAACO,EAAD,CAAX;AAAkB,OAA1C,CAAD,EAA8CX,cAA9C,CAA7C;AACA,UAAIY,eAAe,GAAG,IAAId,eAAJ,CAAoBE,cAAc,CAACa,KAAnC,EAA0C,IAA1C,EAAgDJ,gBAAhD,CAAtB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IACI;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAmCvB,UAAU,CAACwB,UAAX,CAAsBxB,UAAU,CAACyB,WAAX,CAAuBf,QAAvB,CAAtB,CAAnC,GAA6F,4CAA7F,GAA4IO,eAAe,CAACS,iBAAhB,EAA5I,GAAkL,mBAA9L,CAFJ;AAGAb,MAAAA,gBAAgB,CAACI,eAAe,CAACU,UAAhB,EAAD,CAAhB;AACH;AACJ,GATQ,EASN,CAAClB,IAAD,EAAOD,GAAP,EAAYI,aAAZ,EAA2BF,QAA3B,CATM,CAAT;AAUA,SAAOb,KAAK,CAAC+B,aAAN,CAAoBxB,QAApB,EAA8BrB,QAAQ,CAAC,EAAD,EAAKwB,KAAL,CAAtC,EAAmDK,aAAnD,CAAP;AACH,CAdD;;AAeAN,eAAe,CAACuB,SAAhB,GAA4BzB,QAAQ,CAACyB,SAArC;;AACA,IAAIC,WAAW,GAAG,SAAdA,WAAc,CAAUvB,KAAV,EAAiB;AAAE,SAAQV,KAAK,CAAC+B,aAAN,CAAoBtB,eAApB,EAAqCvB,QAAQ,CAAC,EAAD,EAAKwB,KAAL,EAAYN,iBAAiB,CAACM,KAAD,CAA7B,CAA7C,CAAR;AAA+F,CAApI;;AACA,eAAeuB,WAAf","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport inflection from 'inflection';\nimport { useListController, getElementsFromRecords, InferredElement, } from 'ra-core';\nimport { ListView } from './List';\nimport listFieldTypes from './listFieldTypes';\nvar ListViewGuesser = function (props) {\n    var ids = props.ids, data = props.data, resource = props.resource;\n    var _a = useState(null), inferredChild = _a[0], setInferredChild = _a[1];\n    useEffect(function () {\n        if (ids.length > 0 && data && !inferredChild) {\n            var inferredElements = getElementsFromRecords(ids.map(function (id) { return data[id]; }), listFieldTypes);\n            var inferredChild_1 = new InferredElement(listFieldTypes.table, null, inferredElements);\n            process.env.NODE_ENV !== 'production' &&\n                // eslint-disable-next-line no-console\n                console.log(\"Guessed List:\\n\\nexport const \" + inflection.capitalize(inflection.singularize(resource)) + \"List = props => (\\n    <List {...props}>\\n\" + inferredChild_1.getRepresentation() + \"\\n    </List>\\n);\");\n            setInferredChild(inferredChild_1.getElement());\n        }\n    }, [data, ids, inferredChild, resource]);\n    return React.createElement(ListView, __assign({}, props), inferredChild);\n};\nListViewGuesser.propTypes = ListView.propTypes;\nvar ListGuesser = function (props) { return (React.createElement(ListViewGuesser, __assign({}, props, useListController(props)))); };\nexport default ListGuesser;\n"]},"metadata":{},"sourceType":"module"}