{"ast":null,"code":"import _objectSpread from\"/home/vsonline/workspace/swdv-620-web-apps-final-project/ReactJsClient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/vsonline/workspace/swdv-620-web-apps-final-project/ReactJsClient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _classCallCheck from\"/home/vsonline/workspace/swdv-620-web-apps-final-project/ReactJsClient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/vsonline/workspace/swdv-620-web-apps-final-project/ReactJsClient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/vsonline/workspace/swdv-620-web-apps-final-project/ReactJsClient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/vsonline/workspace/swdv-620-web-apps-final-project/ReactJsClient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import ReactFileReader from\"react-file-reader\";import CustomersRdxManager from\"./CustomersRdxManager\";var Dataloader=/*#__PURE__*/function(_Component){_inherits(Dataloader,_Component);var _super=_createSuper(Dataloader);function Dataloader(props){var _this;_classCallCheck(this,Dataloader);_this=_super.call(this,props);//this.reloaded = this.props.\n_this.onLoadClick=function(e){e.preventDefault();//TODO: comment\n//console.log(this.state);\nswitch(+_this.state.dataSource){case 1:{//JSON FILE\nif(!_this.state.jsonDataFile)alert(\"Json data file not properly selected, pls try again.\");else _this.loadJsonFile();break;}case 2:{//CSV FILES\nif(!_this.state.csvDataFile||!_this.state.csvMapFile)alert(\"CSV Data or Map not properly selected, pls try again.\");else _this.loadCSVFiles();break;}case 3:{//FETCH FROM API / DB\n_this.fetchFromAPI();break;}default:break;}};_this.refillCustRdxStore=function(dataSetArr){console.log(dataSetArr);CustomersRdxManager.AddCustomerSet(dataSetArr);//TODO: redirect/navegate to /customers\n_this.props.history&&_this.props.history.push(\"/customers\");//TODO: Debug: Comment\nconsole.log(CustomersRdxManager.state);};_this.loadJsonFile=function(){var reader=new FileReader();reader.onabort=function(){return console.log(\"JsonFile reading was aborted\");};reader.onerror=function(){return console.log(\"JsonFile reading has failed\");};reader.onload=function(){var dataSetArr=JSON.parse(reader.result);dataSetArr=Array.isArray(dataSetArr)?Array.from(dataSetArr):[];//TODO: comment\nconsole.log(\" from JSON:\");console.log(dataSetArr);_this.refillCustRdxStore(dataSetArr);};reader.readAsBinaryString(_this.state.jsonDataFile);};_this.loadCSVFiles=function(){var csvParser=require(\"csvtojson\");var reader=new FileReader();reader.onabort=function(){return console.log(\"CsvFile reading was aborted\");};reader.onerror=function(){return console.log(\"CsvFile reading has failed\");};reader.onload=function(){csvParser().fromString(reader.result).then(function(_ref){var _ref2=_slicedToArray(_ref,1),Mapper=_ref2[0];reader.onload=function(){csvParser().fromString(reader.result).then(function(dataSetArr){dataSetArr=dataSetArr.map(function(entry,i){var resultObj={id:i+1,updated_at:null};for(var key in Mapper){resultObj[key]=entry[Mapper[key]];}return resultObj;});//TODO: comment\nconsole.log(\"from CSV:\");console.log(dataSetArr);_this.refillCustRdxStore(dataSetArr);});};reader.readAsBinaryString(_this.state.csvDataFile);});};reader.readAsBinaryString(_this.state.csvMapFile);};_this.fetchFromAPI=function(){var REST_API_URL=_this.state.restApiArr[_this.state.restApiIdx].split(\"[\")[1].split(\"]\")[0].concat(\"/customers\");fetch(REST_API_URL).then(function(res){//console.log(res);\nif(res.ok)return res.json();alert(\"ERROR Fetching from: \"+REST_API_URL);return[];}).then(function(json){return _this.refillCustRdxStore(json);}).catch(function(err){return console.error(err);});};_this.state={//remounting:true,\ndataSource:0,// 0: empty, 1:json, 2:csv, 3: database/api\njsonDataFile:null,csvDataFile:null,csvMapFile:null,restApiIdx:0,restApiArr:[\"(SPRINGB) [\"+window.location.protocol+\"//\"+window.location.hostname+\":\"+4001+\"]\",\"(EXPRESS) [\"+window.location.protocol+\"//\"+window.location.hostname+\":\"+4002+\"]\"]};//ReduxEngine.reduxStore.subscribe(() => { ???\n//    this.setState({remounting:true});\n//});\nreturn _this;}_createClass(Dataloader,[{key:\"render\",value:function render(){var _this2=this;var fontStyle=function fontStyle(f,v){return{fontSize:\"calc(\".concat(f,\"px + \").concat(v,\"vmin)\")};};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"fieldset\",{style:{border:\"2px solid black\"}},/*#__PURE__*/React.createElement(\"legend\",{style:_objectSpread({border:\"2px solid black\",padding:\"0 2vmin 0 2vmin\"},fontStyle(14,5))},\"Data loader\"),/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"form\",{onSubmit:function onSubmit(e){return e.preventDefault();}},/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"strong\",null,\"Select the source of the data:\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"select\",{value:this.state.dataSource,onChange:function onChange(e){return _this2.setState({dataSource:e.target.value});}},[\"\",\"json file\",\"csv map/data files\",\"REST-API (database)\"].map(function(dataSource,index){return/*#__PURE__*/React.createElement(\"option\",{value:index},dataSource);}))),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),+this.state.dataSource===1?/*#__PURE__*/React.createElement(ReactFileReader//https://www.npmjs.com/package/react-file-reader\n,{fileTypes:[\".json\"],handleFiles:function handleFiles(files){//TODO: validate?: file[0].type === \"application/json\"\n_this2.setState({jsonDataFile:files.length>0?files[0]:null});}},/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Select \",/*#__PURE__*/React.createElement(\"span\",{style:{color:\"orange\"}},\"JSON\"),\" file:\",\" \"),/*#__PURE__*/React.createElement(\"strong\",{style:{color:\"green\"}},this.state.jsonDataFile&&this.state.jsonDataFile.name),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"button\",null,\"Open\"))):+this.state.dataSource===2?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ReactFileReader,{fileTypes:[\".csv\"],handleFiles:function handleFiles(files){_this2.setState({csvDataFile:files.length>0?files[0]:null});}},/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Select \",/*#__PURE__*/React.createElement(\"span\",{style:{color:\"orange\"}},\"CSV\"),\" (\",\" \",/*#__PURE__*/React.createElement(\"span\",{style:{color:\"red\"}},\"Data\"),\" ) file:\",\" \"),/*#__PURE__*/React.createElement(\"strong\",{style:{color:\"green\"}},this.state.csvDataFile&&this.state.csvDataFile.name),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"button\",null,\"Open Data File\"))),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(ReactFileReader,{fileTypes:[\".csv\"],handleFiles:function handleFiles(files){_this2.setState({csvMapFile:files.length>0?files[0]:null});}},/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Select \",/*#__PURE__*/React.createElement(\"span\",{style:{color:\"orange\"}},\"CSV\"),\" (\",\" \",/*#__PURE__*/React.createElement(\"span\",{style:{color:\"red\"}},\"Map\"),\" ) file:\",\" \"),/*#__PURE__*/React.createElement(\"strong\",{style:{color:\"green\"}},this.state.csvMapFile&&this.state.csvMapFile.name),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"button\",null,\"Open Map File\")))):+this.state.dataSource===3?/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Select the Rest API for fetching the data:\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"select\",{value:this.state.restApiIdx,onChange:function onChange(e){return _this2.setState({restApiIdx:e.target.value});}},this.state.restApiArr.map(function(elem,index){return/*#__PURE__*/React.createElement(\"option\",{value:index},elem);})),/*#__PURE__*/React.createElement(\"br\",null)):null,/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",value:\"Load...\",onClick:this.onLoadClick})))));}}]);return Dataloader;}(Component);export{Dataloader as default};","map":{"version":3,"sources":["/home/vsonline/workspace/swdv-620-web-apps-final-project/ReactJsClient/src/Etl/Dataloader.js"],"names":["React","Component","ReactFileReader","CustomersRdxManager","Dataloader","props","onLoadClick","e","preventDefault","state","dataSource","jsonDataFile","alert","loadJsonFile","csvDataFile","csvMapFile","loadCSVFiles","fetchFromAPI","refillCustRdxStore","dataSetArr","console","log","AddCustomerSet","history","push","reader","FileReader","onabort","onerror","onload","JSON","parse","result","Array","isArray","from","readAsBinaryString","csvParser","require","fromString","then","Mapper","map","entry","i","resultObj","id","updated_at","key","REST_API_URL","restApiArr","restApiIdx","split","concat","fetch","res","ok","json","catch","err","error","window","location","protocol","hostname","fontStyle","f","v","fontSize","border","padding","setState","target","value","index","files","length","color","name","elem"],"mappings":"6lCAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CAEA,MAAOC,CAAAA,mBAAP,KAAgC,uBAAhC,C,GAEqBC,CAAAA,U,wGAEnB,oBAAYC,KAAZ,CAAmB,4CAEjB,uBAAMA,KAAN,EAEA;AAJiB,MAmKnBC,WAnKmB,CAmKL,SAACC,CAAD,CAAO,CACnBA,CAAC,CAACC,cAAF,GAEA;AACA;AAEA,OAAQ,CAAC,MAAKC,KAAL,CAAWC,UAApB,EACE,IAAK,EAAL,CAAQ,CACN;AACA,GAAI,CAAC,MAAKD,KAAL,CAAWE,YAAhB,CACEC,KAAK,CAAC,sDAAD,CAAL,CADF,IAEK,OAAKC,YAAL,GACL,MACD,CACD,IAAK,EAAL,CAAQ,CACN;AACA,GAAI,CAAC,MAAKJ,KAAL,CAAWK,WAAZ,EAA2B,CAAC,MAAKL,KAAL,CAAWM,UAA3C,CACEH,KAAK,CAAC,uDAAD,CAAL,CADF,IAEK,OAAKI,YAAL,GACL,MACD,CACD,IAAK,EAAL,CAAQ,CACN;AACA,MAAKC,YAAL,GACA,MACD,CACD,QACE,MArBJ,CAuBD,CAhMkB,OAkMnBC,kBAlMmB,CAkME,SAACC,UAAD,CAAgB,CAEnCC,OAAO,CAACC,GAAR,CAAYF,UAAZ,EAEAhB,mBAAmB,CAACmB,cAApB,CAAmCH,UAAnC,EAEA;AACA,MAAKd,KAAL,CAAWkB,OAAX,EAAsB,MAAKlB,KAAL,CAAWkB,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB,CAAtB,CAEA;AACAJ,OAAO,CAACC,GAAR,CAAYlB,mBAAmB,CAACM,KAAhC,EACD,CA7MkB,OA+MnBI,YA/MmB,CA+MJ,UAAM,CACnB,GAAMY,CAAAA,MAAM,CAAG,GAAIC,CAAAA,UAAJ,EAAf,CAEAD,MAAM,CAACE,OAAP,CAAiB,iBAAMP,CAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,CAAN,EAAjB,CACAI,MAAM,CAACG,OAAP,CAAiB,iBAAMR,CAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,CAAN,EAAjB,CACAI,MAAM,CAACI,MAAP,CAAgB,UAAM,CACpB,GAAIV,CAAAA,UAAU,CAAGW,IAAI,CAACC,KAAL,CAAWN,MAAM,CAACO,MAAlB,CAAjB,CACAb,UAAU,CAAGc,KAAK,CAACC,OAAN,CAAcf,UAAd,EAA4Bc,KAAK,CAACE,IAAN,CAAWhB,UAAX,CAA5B,CAAqD,EAAlE,CAEA;AACAC,OAAO,CAACC,GAAR,CAAY,aAAZ,EACAD,OAAO,CAACC,GAAR,CAAYF,UAAZ,EAEA,MAAKD,kBAAL,CAAwBC,UAAxB,EACD,CATD,CAUAM,MAAM,CAACW,kBAAP,CAA0B,MAAK3B,KAAL,CAAWE,YAArC,EACD,CA/NkB,OAiOnBK,YAjOmB,CAiOJ,UAAM,CACnB,GAAMqB,CAAAA,SAAS,CAAGC,OAAO,CAAC,WAAD,CAAzB,CAEA,GAAMb,CAAAA,MAAM,CAAG,GAAIC,CAAAA,UAAJ,EAAf,CAEAD,MAAM,CAACE,OAAP,CAAiB,iBAAMP,CAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,CAAN,EAAjB,CACAI,MAAM,CAACG,OAAP,CAAiB,iBAAMR,CAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,CAAN,EAAjB,CACAI,MAAM,CAACI,MAAP,CAAgB,UAAM,CACpBQ,SAAS,GACNE,UADH,CACcd,MAAM,CAACO,MADrB,EAEGQ,IAFH,CAEQ,cAAc,kCAAZC,MAAY,UAClBhB,MAAM,CAACI,MAAP,CAAgB,UAAM,CACpBQ,SAAS,GACNE,UADH,CACcd,MAAM,CAACO,MADrB,EAEGQ,IAFH,CAEQ,SAACrB,UAAD,CAAgB,CACpBA,UAAU,CAAGA,UAAU,CAACuB,GAAX,CAAe,SAACC,KAAD,CAAQC,CAAR,CAAc,CACxC,GAAMC,CAAAA,SAAS,CAAG,CAAEC,EAAE,CAAEF,CAAC,CAAG,CAAV,CAAaG,UAAU,CAAE,IAAzB,CAAlB,CACA,IAAK,GAAIC,CAAAA,GAAT,GAAgBP,CAAAA,MAAhB,EAAwBI,SAAS,CAACG,GAAD,CAAT,CAAiBL,KAAK,CAACF,MAAM,CAACO,GAAD,CAAP,CAAtB,CAAxB,CACA,MAAOH,CAAAA,SAAP,CACD,CAJY,CAAb,CAMA;AACAzB,OAAO,CAACC,GAAR,CAAY,WAAZ,EACAD,OAAO,CAACC,GAAR,CAAYF,UAAZ,EAEA,MAAKD,kBAAL,CAAwBC,UAAxB,EACD,CAdH,EAeD,CAhBD,CAiBAM,MAAM,CAACW,kBAAP,CAA0B,MAAK3B,KAAL,CAAWK,WAArC,EACD,CArBH,EAsBD,CAvBD,CAwBAW,MAAM,CAACW,kBAAP,CAA0B,MAAK3B,KAAL,CAAWM,UAArC,EACD,CAjQkB,OAmQnBE,YAnQmB,CAmQJ,UAAM,CAEnB,GAAIgC,CAAAA,YAAY,CACd,MAAKxC,KAAL,CAAWyC,UAAX,CAAsB,MAAKzC,KAAL,CAAW0C,UAAjC,EACGC,KADH,CACS,GADT,EACc,CADd,EAEGA,KAFH,CAES,GAFT,EAEc,CAFd,EAGGC,MAHH,CAGU,YAHV,CADF,CAMAC,KAAK,CAACL,YAAD,CAAL,CACGT,IADH,CACQ,SAACe,GAAD,CAAS,CACb;AACA,GAAIA,GAAG,CAACC,EAAR,CAAY,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACZ7C,KAAK,CAAC,wBAA0BqC,YAA3B,CAAL,CACA,MAAO,EAAP,CACD,CANH,EAOGT,IAPH,CAOQ,SAACiB,IAAD,QAAU,OAAKvC,kBAAL,CAAwBuC,IAAxB,CAAV,EAPR,EAQGC,KARH,CAQS,SAACC,GAAD,QAASvC,CAAAA,OAAO,CAACwC,KAAR,CAAcD,GAAd,CAAT,EART,EASD,CApRkB,CAMjB,MAAKlD,KAAL,CAAa,CACX;AACAC,UAAU,CAAE,CAFD,CAEI;AACfC,YAAY,CAAE,IAHH,CAIXG,WAAW,CAAE,IAJF,CAKXC,UAAU,CAAE,IALD,CAMXoC,UAAU,CAAE,CAND,CAOXD,UAAU,CAAE,CACV,cAAgBW,MAAM,CAACC,QAAP,CAAgBC,QAAhC,CACE,IADF,CACSF,MAAM,CAACC,QAAP,CAAgBE,QADzB,CAEE,GAFF,CAEQ,IAFR,CAEe,GAHL,CAIV,cAAgBH,MAAM,CAACC,QAAP,CAAgBC,QAAhC,CACE,IADF,CACSF,MAAM,CAACC,QAAP,CAAgBE,QADzB,CAEE,GAFF,CAEQ,IAFR,CAEe,GANL,CAPD,CAAb,CAgBA;AACA;AACA;AAxBiB,aAyBlB,C,8DAEQ,iBACP,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,CAAD,CAAIC,CAAJ,QAAW,CAAEC,QAAQ,gBAAUF,CAAV,iBAAmBC,CAAnB,SAAV,CAAX,EAAlB,CAEA,mBACE,qDACE,gCAAU,KAAK,CAAE,CAAEE,MAAM,CAAE,iBAAV,CAAjB,eACE,8BACE,KAAK,gBACHA,MAAM,CAAE,iBADL,CAEHC,OAAO,CAAE,iBAFN,EAGAL,SAAS,CAAC,EAAD,CAAK,CAAL,CAHT,CADP,gBADF,cAUE,qDACE,4BAAM,QAAQ,CAAE,kBAAC1D,CAAD,QAAOA,CAAAA,CAAC,CAACC,cAAF,EAAP,EAAhB,eACE,8CACE,8BADF,cAEE,mEAFF,cAGE,8BAHF,cAIE,8BACE,KAAK,CAAE,KAAKC,KAAL,CAAWC,UADpB,CAEE,QAAQ,CAAE,kBAACH,CAAD,QACR,CAAA,MAAI,CAACgE,QAAL,CAAc,CAAE7D,UAAU,CAAEH,CAAC,CAACiE,MAAF,CAASC,KAAvB,CAAd,CADQ,EAFZ,EAMG,CACC,EADD,CAEC,WAFD,CAGC,oBAHD,CAIC,qBAJD,EAKC/B,GALD,CAKK,SAAChC,UAAD,CAAagE,KAAb,qBACJ,8BAAQ,KAAK,CAAEA,KAAf,EAAuBhE,UAAvB,CADI,EALL,CANH,CAJF,CADF,cAqBE,8BArBF,cAsBE,8BAtBF,CAuBG,CAAC,KAAKD,KAAL,CAAWC,UAAZ,GAA2B,CAA3B,cACC,oBAAC,eAAgB;AAAjB,EACE,SAAS,CAAE,CAAC,OAAD,CADb,CAEE,WAAW,CAAE,qBAACiE,KAAD,CAAW,CACtB;AACA,MAAI,CAACJ,QAAL,CAAc,CACZ5D,YAAY,CAAEgE,KAAK,CAACC,MAAN,CAAe,CAAf,CAAmBD,KAAK,CAAC,CAAD,CAAxB,CAA8B,IADhC,CAAd,EAGD,CAPH,eASE,8CACE,yDACS,4BAAM,KAAK,CAAE,CAAEE,KAAK,CAAE,QAAT,CAAb,SADT,UAC6D,GAD7D,CADF,cAIE,8BAAQ,KAAK,CAAE,CAAEA,KAAK,CAAE,OAAT,CAAf,EACG,KAAKpE,KAAL,CAAWE,YAAX,EAA2B,KAAKF,KAAL,CAAWE,YAAX,CAAwBmE,IADtD,CAJF,cAOE,8BAPF,cAQE,yCARF,CATF,CADD,CAqBG,CAAC,KAAKrE,KAAL,CAAWC,UAAZ,GAA2B,CAA3B,cACF,qDACE,oBAAC,eAAD,EACE,SAAS,CAAE,CAAC,MAAD,CADb,CAEE,WAAW,CAAE,qBAACiE,KAAD,CAAW,CACtB,MAAI,CAACJ,QAAL,CAAc,CACZzD,WAAW,CAAE6D,KAAK,CAACC,MAAN,CAAe,CAAf,CAAmBD,KAAK,CAAC,CAAD,CAAxB,CAA8B,IAD/B,CAAd,EAGD,CANH,eAQE,8CACE,yDACS,4BAAM,KAAK,CAAE,CAAEE,KAAK,CAAE,QAAT,CAAb,QADT,MACwD,GADxD,cAEE,4BAAM,KAAK,CAAE,CAAEA,KAAK,CAAE,KAAT,CAAb,SAFF,YAEqD,GAFrD,CADF,cAKE,8BAAQ,KAAK,CAAE,CAAEA,KAAK,CAAE,OAAT,CAAf,EACG,KAAKpE,KAAL,CAAWK,WAAX,EAA0B,KAAKL,KAAL,CAAWK,WAAX,CAAuBgE,IADpD,CALF,cAQE,8BARF,cASE,mDATF,CARF,CADF,cAqBE,8BArBF,cAsBE,oBAAC,eAAD,EACE,SAAS,CAAE,CAAC,MAAD,CADb,CAEE,WAAW,CAAE,qBAACH,KAAD,CAAW,CACtB,MAAI,CAACJ,QAAL,CAAc,CACZxD,UAAU,CAAE4D,KAAK,CAACC,MAAN,CAAe,CAAf,CAAmBD,KAAK,CAAC,CAAD,CAAxB,CAA8B,IAD9B,CAAd,EAGD,CANH,eAQE,8CACE,yDACS,4BAAM,KAAK,CAAE,CAAEE,KAAK,CAAE,QAAT,CAAb,QADT,MACwD,GADxD,cAEE,4BAAM,KAAK,CAAE,CAAEA,KAAK,CAAE,KAAT,CAAb,QAFF,YAEoD,GAFpD,CADF,cAKE,8BAAQ,KAAK,CAAE,CAAEA,KAAK,CAAE,OAAT,CAAf,EACG,KAAKpE,KAAL,CAAWM,UAAX,EAAyB,KAAKN,KAAL,CAAWM,UAAX,CAAsB+D,IADlD,CALF,cAQE,8BARF,cASE,kDATF,CARF,CAtBF,CADE,CA4CA,CAAC,KAAKrE,KAAL,CAAWC,UAAZ,GAA2B,CAA3B,cACF,8CACE,+EADF,cAEE,8BAFF,cAGE,8BACE,KAAK,CAAE,KAAKD,KAAL,CAAW0C,UADpB,CAEE,QAAQ,CAAE,kBAAC5C,CAAD,QACR,CAAA,MAAI,CAACgE,QAAL,CAAc,CACZpB,UAAU,CAAE5C,CAAC,CAACiE,MAAF,CAASC,KADT,CAAd,CADQ,EAFZ,EASI,KAAKhE,KAAL,CAAWyC,UAAX,CAAsBR,GAAtB,CACE,SAACqC,IAAD,CAAOL,KAAP,qBACE,8BAAQ,KAAK,CAAEA,KAAf,EAAuBK,IAAvB,CADF,EADF,CATJ,CAHF,cAmBE,8BAnBF,CADE,CAsBA,IA9GN,cA+GE,8BA/GF,cAgHE,6BAAO,IAAI,CAAC,QAAZ,CAAqB,KAAK,CAAC,SAA3B,CAAqC,OAAO,CAAE,KAAKzE,WAAnD,EAhHF,CADF,CAVF,CADF,CADF,CAmID,C,wBAnKqCL,S,SAAnBG,U","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport ReactFileReader from \"react-file-reader\";\r\n\r\nimport CustomersRdxManager from \"./CustomersRdxManager\";\r\n\r\nexport default class Dataloader extends Component {\r\n  \r\n  constructor(props) {\r\n    \r\n    super(props);\r\n\r\n    //this.reloaded = this.props.\r\n\r\n    this.state = {\r\n      //remounting:true,\r\n      dataSource: 0, // 0: empty, 1:json, 2:csv, 3: database/api\r\n      jsonDataFile: null,\r\n      csvDataFile: null,\r\n      csvMapFile: null,\r\n      restApiIdx: 0,\r\n      restApiArr: [        \r\n        \"(SPRINGB) [\" + window.location.protocol\r\n        + \"//\" + window.location.hostname \r\n        + \":\" + 4001 + \"]\",\r\n        \"(EXPRESS) [\" + window.location.protocol\r\n        + \"//\" + window.location.hostname\r\n        + \":\" + 4002 + \"]\"\r\n      ],\r\n    };\r\n    //ReduxEngine.reduxStore.subscribe(() => { ???\r\n    //    this.setState({remounting:true});\r\n    //});\r\n  }\r\n\r\n  render() {\r\n    const fontStyle = (f, v) => ({ fontSize: `calc(${f}px + ${v}vmin)` });\r\n\r\n    return (\r\n      <>\r\n        <fieldset style={{ border: \"2px solid black\" }}>\r\n          <legend\r\n            style={{\r\n              border: \"2px solid black\",\r\n              padding: \"0 2vmin 0 2vmin\",\r\n              ...fontStyle(14, 5),\r\n            }}\r\n          >\r\n            Data loader\r\n          </legend>\r\n          <>\r\n            <form onSubmit={(e) => e.preventDefault()}>\r\n              <label>\r\n                <br />\r\n                <strong>Select the source of the data:</strong>\r\n                <br />\r\n                <select\r\n                  value={this.state.dataSource}\r\n                  onChange={(e) =>\r\n                    this.setState({ dataSource: e.target.value })\r\n                  }\r\n                >\r\n                  {[\r\n                    \"\",\r\n                    \"json file\",\r\n                    \"csv map/data files\",\r\n                    \"REST-API (database)\",\r\n                  ].map((dataSource, index) => (\r\n                    <option value={index}>{dataSource}</option>\r\n                  ))}\r\n                </select>\r\n              </label>\r\n              <br />\r\n              <br />\r\n              {+this.state.dataSource === 1 ? (\r\n                <ReactFileReader //https://www.npmjs.com/package/react-file-reader\r\n                  fileTypes={[\".json\"]}\r\n                  handleFiles={(files) => {\r\n                    //TODO: validate?: file[0].type === \"application/json\"\r\n                    this.setState({\r\n                      jsonDataFile: files.length > 0 ? files[0] : null,\r\n                    });\r\n                  }}\r\n                >\r\n                  <label>\r\n                    <strong>\r\n                      Select <span style={{ color: \"orange\" }}>JSON</span> file:{\" \"}\r\n                    </strong>\r\n                    <strong style={{ color: \"green\" }}>\r\n                      {this.state.jsonDataFile && this.state.jsonDataFile.name}\r\n                    </strong>\r\n                    <br />\r\n                    <button>Open</button>\r\n                  </label>\r\n                </ReactFileReader>\r\n              ) : +this.state.dataSource === 2 ? (\r\n                <>\r\n                  <ReactFileReader\r\n                    fileTypes={[\".csv\"]}\r\n                    handleFiles={(files) => {\r\n                      this.setState({\r\n                        csvDataFile: files.length > 0 ? files[0] : null,\r\n                      });\r\n                    }}\r\n                  >\r\n                    <label>\r\n                      <strong>\r\n                        Select <span style={{ color: \"orange\" }}>CSV</span> ({\" \"}\r\n                        <span style={{ color: \"red\" }}>Data</span> ) file:{\" \"}\r\n                      </strong>\r\n                      <strong style={{ color: \"green\" }}>\r\n                        {this.state.csvDataFile && this.state.csvDataFile.name}\r\n                      </strong>\r\n                      <br />\r\n                      <button>Open Data File</button>\r\n                    </label>\r\n                  </ReactFileReader>\r\n                  <br />\r\n                  <ReactFileReader\r\n                    fileTypes={[\".csv\"]}\r\n                    handleFiles={(files) => {\r\n                      this.setState({\r\n                        csvMapFile: files.length > 0 ? files[0] : null,\r\n                      });\r\n                    }}\r\n                  >\r\n                    <label>\r\n                      <strong>\r\n                        Select <span style={{ color: \"orange\" }}>CSV</span> ({\" \"}\r\n                        <span style={{ color: \"red\" }}>Map</span> ) file:{\" \"}\r\n                      </strong>\r\n                      <strong style={{ color: \"green\" }}>\r\n                        {this.state.csvMapFile && this.state.csvMapFile.name}\r\n                      </strong>\r\n                      <br />\r\n                      <button>Open Map File</button>\r\n                    </label>\r\n                  </ReactFileReader>\r\n                </>\r\n              ) : +this.state.dataSource === 3 ? (\r\n                <label>\r\n                  <strong>Select the Rest API for fetching the data:</strong>\r\n                  <br />\r\n                  <select\r\n                    value={this.state.restApiIdx}\r\n                    onChange={(e) =>\r\n                      this.setState({\r\n                        restApiIdx: e.target.value\r\n                      })\r\n                    }\r\n                  >\r\n                    {\r\n                      this.state.restApiArr.map(\r\n                        (elem, index) => (\r\n                          <option value={index}>{elem}</option>\r\n                        )\r\n                      )\r\n                    }\r\n                  </select>\r\n                  <br />\r\n                </label>\r\n              ) : null}\r\n              <br />\r\n              <input type=\"submit\" value=\"Load...\" onClick={this.onLoadClick} />\r\n            </form>\r\n          </>\r\n        </fieldset>\r\n      </>\r\n    );\r\n  }\r\n\r\n  onLoadClick = (e) => {\r\n    e.preventDefault();\r\n\r\n    //TODO: comment\r\n    //console.log(this.state);\r\n\r\n    switch (+this.state.dataSource) {\r\n      case 1: {\r\n        //JSON FILE\r\n        if (!this.state.jsonDataFile)\r\n          alert(\"Json data file not properly selected, pls try again.\");\r\n        else this.loadJsonFile();        \r\n        break;\r\n      }\r\n      case 2: {\r\n        //CSV FILES\r\n        if (!this.state.csvDataFile || !this.state.csvMapFile)\r\n          alert(\"CSV Data or Map not properly selected, pls try again.\");\r\n        else this.loadCSVFiles();        \r\n        break;\r\n      }\r\n      case 3: {        \r\n        //FETCH FROM API / DB\r\n        this.fetchFromAPI();        \r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  refillCustRdxStore = (dataSetArr) => {\r\n\r\n    console.log(dataSetArr);\r\n\r\n    CustomersRdxManager.AddCustomerSet(dataSetArr);\r\n\r\n    //TODO: redirect/navegate to /customers\r\n    this.props.history && this.props.history.push(\"/customers\");\r\n\r\n    //TODO: Debug: Comment\r\n    console.log(CustomersRdxManager.state);\r\n  };\r\n\r\n  loadJsonFile = () => {\r\n    const reader = new FileReader();\r\n\r\n    reader.onabort = () => console.log(\"JsonFile reading was aborted\");\r\n    reader.onerror = () => console.log(\"JsonFile reading has failed\");\r\n    reader.onload = () => {\r\n      let dataSetArr = JSON.parse(reader.result);\r\n      dataSetArr = Array.isArray(dataSetArr) ? Array.from(dataSetArr) : [];\r\n\r\n      //TODO: comment\r\n      console.log(\" from JSON:\");\r\n      console.log(dataSetArr);\r\n\r\n      this.refillCustRdxStore(dataSetArr);\r\n    };\r\n    reader.readAsBinaryString(this.state.jsonDataFile);\r\n  };\r\n\r\n  loadCSVFiles = () => {\r\n    const csvParser = require(\"csvtojson\");\r\n\r\n    const reader = new FileReader();\r\n\r\n    reader.onabort = () => console.log(\"CsvFile reading was aborted\");\r\n    reader.onerror = () => console.log(\"CsvFile reading has failed\");\r\n    reader.onload = () => {\r\n      csvParser()\r\n        .fromString(reader.result)\r\n        .then(([Mapper]) => {\r\n          reader.onload = () => {\r\n            csvParser()\r\n              .fromString(reader.result)\r\n              .then((dataSetArr) => {\r\n                dataSetArr = dataSetArr.map((entry, i) => {\r\n                  const resultObj = { id: i + 1, updated_at: null };\r\n                  for (let key in Mapper) resultObj[key] = entry[Mapper[key]];\r\n                  return resultObj;\r\n                });\r\n\r\n                //TODO: comment\r\n                console.log(\"from CSV:\");\r\n                console.log(dataSetArr);\r\n\r\n                this.refillCustRdxStore(dataSetArr);\r\n              });\r\n          };\r\n          reader.readAsBinaryString(this.state.csvDataFile);\r\n        });\r\n    };\r\n    reader.readAsBinaryString(this.state.csvMapFile);\r\n  };\r\n\r\n  fetchFromAPI = () => {    \r\n    \r\n    let REST_API_URL =\r\n      this.state.restApiArr[this.state.restApiIdx]\r\n        .split(\"[\")[1]\r\n        .split(\"]\")[0]\r\n        .concat(\"/customers\");\r\n    \r\n    fetch(REST_API_URL)      \r\n      .then((res) => {\r\n        //console.log(res);\r\n        if (res.ok) return res.json();\r\n        alert(\"ERROR Fetching from: \" + REST_API_URL);\r\n        return [];\r\n      })\r\n      .then((json) => this.refillCustRdxStore(json))\r\n      .catch((err) => console.error(err));      \r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}